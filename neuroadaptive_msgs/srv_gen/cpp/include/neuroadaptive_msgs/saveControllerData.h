/* Auto-generated by genmsg_cpp for file /home/isura/groovy_workspace/sandbox/uta_pr2/neuroadaptive_msgs/srv/saveControllerData.srv */
#ifndef NEUROADAPTIVE_MSGS_SERVICE_SAVECONTROLLERDATA_H
#define NEUROADAPTIVE_MSGS_SERVICE_SAVECONTROLLERDATA_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace neuroadaptive_msgs
{
template <class ContainerAllocator>
struct saveControllerDataRequest_ {
  typedef saveControllerDataRequest_<ContainerAllocator> Type;

  saveControllerDataRequest_()
  : fileName()
  {
  }

  saveControllerDataRequest_(const ContainerAllocator& _alloc)
  : fileName(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _fileName_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  fileName;


  typedef boost::shared_ptr< ::neuroadaptive_msgs::saveControllerDataRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::neuroadaptive_msgs::saveControllerDataRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct saveControllerDataRequest
typedef  ::neuroadaptive_msgs::saveControllerDataRequest_<std::allocator<void> > saveControllerDataRequest;

typedef boost::shared_ptr< ::neuroadaptive_msgs::saveControllerDataRequest> saveControllerDataRequestPtr;
typedef boost::shared_ptr< ::neuroadaptive_msgs::saveControllerDataRequest const> saveControllerDataRequestConstPtr;



template <class ContainerAllocator>
struct saveControllerDataResponse_ {
  typedef saveControllerDataResponse_<ContainerAllocator> Type;

  saveControllerDataResponse_()
  : success(false)
  {
  }

  saveControllerDataResponse_(const ContainerAllocator& _alloc)
  : success(false)
  {
  }

  typedef uint8_t _success_type;
  uint8_t success;


  typedef boost::shared_ptr< ::neuroadaptive_msgs::saveControllerDataResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::neuroadaptive_msgs::saveControllerDataResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct saveControllerDataResponse
typedef  ::neuroadaptive_msgs::saveControllerDataResponse_<std::allocator<void> > saveControllerDataResponse;

typedef boost::shared_ptr< ::neuroadaptive_msgs::saveControllerDataResponse> saveControllerDataResponsePtr;
typedef boost::shared_ptr< ::neuroadaptive_msgs::saveControllerDataResponse const> saveControllerDataResponseConstPtr;


struct saveControllerData
{

typedef saveControllerDataRequest Request;
typedef saveControllerDataResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct saveControllerData
} // namespace neuroadaptive_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::neuroadaptive_msgs::saveControllerDataRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::neuroadaptive_msgs::saveControllerDataRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::neuroadaptive_msgs::saveControllerDataRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "0c96d4662a80949a4927729271153923";
  }

  static const char* value(const  ::neuroadaptive_msgs::saveControllerDataRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x0c96d4662a80949aULL;
  static const uint64_t static_value2 = 0x4927729271153923ULL;
};

template<class ContainerAllocator>
struct DataType< ::neuroadaptive_msgs::saveControllerDataRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "neuroadaptive_msgs/saveControllerDataRequest";
  }

  static const char* value(const  ::neuroadaptive_msgs::saveControllerDataRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::neuroadaptive_msgs::saveControllerDataRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
string fileName\n\
\n\
";
  }

  static const char* value(const  ::neuroadaptive_msgs::saveControllerDataRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::neuroadaptive_msgs::saveControllerDataResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::neuroadaptive_msgs::saveControllerDataResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::neuroadaptive_msgs::saveControllerDataResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "358e233cde0c8a8bcfea4ce193f8fc15";
  }

  static const char* value(const  ::neuroadaptive_msgs::saveControllerDataResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x358e233cde0c8a8bULL;
  static const uint64_t static_value2 = 0xcfea4ce193f8fc15ULL;
};

template<class ContainerAllocator>
struct DataType< ::neuroadaptive_msgs::saveControllerDataResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "neuroadaptive_msgs/saveControllerDataResponse";
  }

  static const char* value(const  ::neuroadaptive_msgs::saveControllerDataResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::neuroadaptive_msgs::saveControllerDataResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
bool success\n\
\n\
";
  }

  static const char* value(const  ::neuroadaptive_msgs::saveControllerDataResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::neuroadaptive_msgs::saveControllerDataResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::neuroadaptive_msgs::saveControllerDataRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.fileName);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct saveControllerDataRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::neuroadaptive_msgs::saveControllerDataResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.success);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct saveControllerDataResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<neuroadaptive_msgs::saveControllerData> {
  static const char* value() 
  {
    return "71f144908c8613a70a312851a43a7309";
  }

  static const char* value(const neuroadaptive_msgs::saveControllerData&) { return value(); } 
};

template<>
struct DataType<neuroadaptive_msgs::saveControllerData> {
  static const char* value() 
  {
    return "neuroadaptive_msgs/saveControllerData";
  }

  static const char* value(const neuroadaptive_msgs::saveControllerData&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<neuroadaptive_msgs::saveControllerDataRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "71f144908c8613a70a312851a43a7309";
  }

  static const char* value(const neuroadaptive_msgs::saveControllerDataRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<neuroadaptive_msgs::saveControllerDataRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "neuroadaptive_msgs/saveControllerData";
  }

  static const char* value(const neuroadaptive_msgs::saveControllerDataRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<neuroadaptive_msgs::saveControllerDataResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "71f144908c8613a70a312851a43a7309";
  }

  static const char* value(const neuroadaptive_msgs::saveControllerDataResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<neuroadaptive_msgs::saveControllerDataResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "neuroadaptive_msgs/saveControllerData";
  }

  static const char* value(const neuroadaptive_msgs::saveControllerDataResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // NEUROADAPTIVE_MSGS_SERVICE_SAVECONTROLLERDATA_H

