// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controllerFullData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "controllerFullData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dataPoint {

namespace {

const ::google::protobuf::Descriptor* Datum_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Datum_reflection_ = NULL;
const ::google::protobuf::Descriptor* controllerFullData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  controllerFullData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_controllerFullData_2eproto() {
  protobuf_AddDesc_controllerFullData_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "controllerFullData.proto");
  GOOGLE_CHECK(file != NULL);
  Datum_descriptor_ = file->message_type(0);
  static const int Datum_offsets_[188] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, dt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, force_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, force_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, force_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, torque_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, torque_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, torque_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, acc_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, acc_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, acc_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_eff_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_eff_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_eff_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_trq_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_trq_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_trq_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, reference_eff_j0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, reference_eff_j1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, reference_eff_j2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, reference_eff_j3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, reference_eff_j4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, reference_eff_j5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, reference_eff_j6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, taskref_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, taskref_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, taskref_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, taskref_phi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, taskref_theta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, taskref_psi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, taskrefmodel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, taskrefmodel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, taskrefmodel_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, taskrefmodel_phi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, taskrefmodel_theta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, taskrefmodel_psi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_cartpos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_cartpos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_cartpos_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_cartpos_qx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_cartpos_qy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_cartpos_qz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_cartpos_qw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_pos_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_vel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_vel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_vel_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_acc_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_acc_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_acc_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_pos_j0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_pos_j1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_pos_j2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_pos_j3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_pos_j4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_pos_j5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_pos_j6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_vel_j0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_vel_j1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_vel_j2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_vel_j3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_vel_j4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_vel_j5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_vel_j6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_acc_j0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_acc_j1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_acc_j2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_acc_j3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_acc_j4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_acc_j5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_acc_j6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_eff_j0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_eff_j1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_eff_j2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_eff_j3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_eff_j4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_eff_j5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_eff_j6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, control_eff_j0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, control_eff_j1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, control_eff_j2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, control_eff_j3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, control_eff_j4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, control_eff_j5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, control_eff_j6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_cartpos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_cartpos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_cartpos_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_cartpos_qx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_cartpos_qy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_cartpos_qz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_cartpos_qw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_pos_j0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_pos_j1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_pos_j2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_pos_j3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_pos_j4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_pos_j5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_pos_j6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_vel_j0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_vel_j1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_vel_j2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_vel_j3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_vel_j4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_vel_j5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_vel_j6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_acc_j0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_acc_j1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_acc_j2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_acc_j3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_acc_j4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_acc_j5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_acc_j6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_eff_j0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_eff_j1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_eff_j2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_eff_j3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_eff_j4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_eff_j5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, r_eff_j6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, l_limit_0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, l_limit_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, l_limit_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, l_limit_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, l_limit_4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, l_limit_5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, l_limit_6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, u_limit_0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, u_limit_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, u_limit_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, u_limit_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, u_limit_4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, u_limit_5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, u_limit_6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, kappa_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, kv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, lambda_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, kz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, zb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, f_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, g_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, inparams_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, outparams_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, hiddennodes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, errorparams_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, feedforwardforce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, nn_on_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartpos_kp_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartpos_kp_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartpos_kp_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartpos_kd_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartpos_kd_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartpos_kd_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartrot_kp_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartrot_kp_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartrot_kp_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartrot_kd_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartrot_kd_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartrot_kd_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, usecurrentcartpose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, usenullspacepose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartinix_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartiniy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartiniz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartiniroll_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartinipitch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartiniyaw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartdesx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartdesy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartdesz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartdesroll_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartdespitch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, cartdesyaw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, m_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, d_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, k_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, task_ma_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, task_mb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, fixedfilterweights_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, w0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, w1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, w2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, w3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, w4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, w5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, w6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, w7_),
  };
  Datum_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Datum_descriptor_,
      Datum::default_instance_,
      Datum_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Datum));
  controllerFullData_descriptor_ = file->message_type(1);
  static const int controllerFullData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(controllerFullData, datum_),
  };
  controllerFullData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      controllerFullData_descriptor_,
      controllerFullData::default_instance_,
      controllerFullData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(controllerFullData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(controllerFullData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(controllerFullData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_controllerFullData_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Datum_descriptor_, &Datum::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    controllerFullData_descriptor_, &controllerFullData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_controllerFullData_2eproto() {
  delete Datum::default_instance_;
  delete Datum_reflection_;
  delete controllerFullData::default_instance_;
  delete controllerFullData_reflection_;
}

void protobuf_AddDesc_controllerFullData_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030controllerFullData.proto\022\tdataPoint\"\265\034"
    "\n\005Datum\022\n\n\002dt\030\001 \001(\001\022\017\n\007force_x\030\002 \001(\001\022\017\n\007"
    "force_y\030\003 \001(\001\022\017\n\007force_z\030\004 \001(\001\022\020\n\010torque"
    "_x\030\005 \001(\001\022\020\n\010torque_y\030\006 \001(\001\022\020\n\010torque_z\030\007"
    " \001(\001\022\r\n\005acc_x\030\010 \001(\001\022\r\n\005acc_y\030\t \001(\001\022\r\n\005ac"
    "c_z\030\n \001(\001\022\017\n\007r_eff_x\030\013 \001(\001\022\017\n\007r_eff_y\030\014 "
    "\001(\001\022\017\n\007r_eff_z\030\r \001(\001\022\017\n\007r_trq_x\030\016 \001(\001\022\017\n"
    "\007r_trq_y\030\017 \001(\001\022\017\n\007r_trq_z\030\020 \001(\001\022\030\n\020refer"
    "ence_eff_j0\030\021 \001(\001\022\030\n\020reference_eff_j1\030\022 "
    "\001(\001\022\030\n\020reference_eff_j2\030\023 \001(\001\022\030\n\020referen"
    "ce_eff_j3\030\024 \001(\001\022\030\n\020reference_eff_j4\030\025 \001("
    "\001\022\030\n\020reference_eff_j5\030\026 \001(\001\022\030\n\020reference"
    "_eff_j6\030\027 \001(\001\022\021\n\ttaskRef_x\030\030 \001(\001\022\021\n\ttask"
    "Ref_y\030\031 \001(\001\022\021\n\ttaskRef_z\030\032 \001(\001\022\023\n\013taskRe"
    "f_phi\030\033 \001(\001\022\025\n\rtaskRef_theta\030\034 \001(\001\022\023\n\013ta"
    "skRef_psi\030\035 \001(\001\022\026\n\016taskRefModel_x\030\036 \001(\001\022"
    "\026\n\016taskRefModel_y\030\037 \001(\001\022\026\n\016taskRefModel_"
    "z\030  \001(\001\022\030\n\020taskRefModel_phi\030! \001(\001\022\032\n\022tas"
    "kRefModel_theta\030\" \001(\001\022\030\n\020taskRefModel_ps"
    "i\030# \001(\001\022\023\n\013m_cartPos_x\030$ \001(\001\022\023\n\013m_cartPo"
    "s_y\030% \001(\001\022\023\n\013m_cartPos_z\030& \001(\001\022\024\n\014m_cart"
    "Pos_Qx\030\' \001(\001\022\024\n\014m_cartPos_Qy\030( \001(\001\022\024\n\014m_"
    "cartPos_Qz\030) \001(\001\022\024\n\014m_cartPos_QW\030* \001(\001\022\017"
    "\n\007m_pos_x\030+ \001(\001\022\017\n\007m_pos_y\030, \001(\001\022\017\n\007m_po"
    "s_z\030- \001(\001\022\017\n\007m_vel_x\030. \001(\001\022\017\n\007m_vel_y\030/ "
    "\001(\001\022\017\n\007m_vel_z\0300 \001(\001\022\017\n\007m_acc_x\0301 \001(\001\022\017\n"
    "\007m_acc_y\0302 \001(\001\022\017\n\007m_acc_z\0303 \001(\001\022\020\n\010m_pos"
    "_j0\0304 \001(\001\022\020\n\010m_pos_j1\0305 \001(\001\022\020\n\010m_pos_j2\030"
    "6 \001(\001\022\020\n\010m_pos_j3\0307 \001(\001\022\020\n\010m_pos_j4\0308 \001("
    "\001\022\020\n\010m_pos_j5\0309 \001(\001\022\020\n\010m_pos_j6\030: \001(\001\022\020\n"
    "\010m_vel_j0\030; \001(\001\022\020\n\010m_vel_j1\030< \001(\001\022\020\n\010m_v"
    "el_j2\030= \001(\001\022\020\n\010m_vel_j3\030> \001(\001\022\020\n\010m_vel_j"
    "4\030\? \001(\001\022\020\n\010m_vel_j5\030@ \001(\001\022\020\n\010m_vel_j6\030A "
    "\001(\001\022\020\n\010m_acc_j0\030B \001(\001\022\020\n\010m_acc_j1\030C \001(\001\022"
    "\020\n\010m_acc_j2\030D \001(\001\022\020\n\010m_acc_j3\030E \001(\001\022\020\n\010m"
    "_acc_j4\030F \001(\001\022\020\n\010m_acc_j5\030G \001(\001\022\020\n\010m_acc"
    "_j6\030H \001(\001\022\020\n\010m_eff_j0\030I \001(\001\022\020\n\010m_eff_j1\030"
    "J \001(\001\022\020\n\010m_eff_j2\030K \001(\001\022\020\n\010m_eff_j3\030L \001("
    "\001\022\020\n\010m_eff_j4\030M \001(\001\022\020\n\010m_eff_j5\030N \001(\001\022\020\n"
    "\010m_eff_j6\030O \001(\001\022\026\n\016control_eff_j0\030P \001(\001\022"
    "\026\n\016control_eff_j1\030Q \001(\001\022\026\n\016control_eff_j"
    "2\030R \001(\001\022\026\n\016control_eff_j3\030S \001(\001\022\026\n\016contr"
    "ol_eff_j4\030T \001(\001\022\026\n\016control_eff_j5\030U \001(\001\022"
    "\026\n\016control_eff_j6\030V \001(\001\022\023\n\013r_cartPos_x\030W"
    " \001(\001\022\023\n\013r_cartPos_y\030X \001(\001\022\023\n\013r_cartPos_z"
    "\030Y \001(\001\022\024\n\014r_cartPos_Qx\030Z \001(\001\022\024\n\014r_cartPo"
    "s_Qy\030[ \001(\001\022\024\n\014r_cartPos_Qz\030\\ \001(\001\022\024\n\014r_ca"
    "rtPos_QW\030] \001(\001\022\020\n\010r_pos_j0\030^ \001(\001\022\020\n\010r_po"
    "s_j1\030_ \001(\001\022\020\n\010r_pos_j2\030` \001(\001\022\020\n\010r_pos_j3"
    "\030a \001(\001\022\020\n\010r_pos_j4\030b \001(\001\022\020\n\010r_pos_j5\030c \001"
    "(\001\022\020\n\010r_pos_j6\030d \001(\001\022\020\n\010r_vel_j0\030e \001(\001\022\020"
    "\n\010r_vel_j1\030f \001(\001\022\020\n\010r_vel_j2\030g \001(\001\022\020\n\010r_"
    "vel_j3\030h \001(\001\022\020\n\010r_vel_j4\030i \001(\001\022\020\n\010r_vel_"
    "j5\030j \001(\001\022\020\n\010r_vel_j6\030k \001(\001\022\020\n\010r_acc_j0\030l"
    " \001(\001\022\020\n\010r_acc_j1\030m \001(\001\022\020\n\010r_acc_j2\030n \001(\001"
    "\022\020\n\010r_acc_j3\030o \001(\001\022\020\n\010r_acc_j4\030p \001(\001\022\020\n\010"
    "r_acc_j5\030q \001(\001\022\020\n\010r_acc_j6\030r \001(\001\022\020\n\010r_ef"
    "f_j0\030s \001(\001\022\020\n\010r_eff_j1\030t \001(\001\022\020\n\010r_eff_j2"
    "\030u \001(\001\022\020\n\010r_eff_j3\030v \001(\001\022\020\n\010r_eff_j4\030w \001"
    "(\001\022\020\n\010r_eff_j5\030x \001(\001\022\020\n\010r_eff_j6\030y \001(\001\022\021"
    "\n\tl_limit_0\030z \001(\001\022\021\n\tl_limit_1\030{ \001(\001\022\021\n\t"
    "l_limit_2\030| \001(\001\022\021\n\tl_limit_3\030} \001(\001\022\021\n\tl_"
    "limit_4\030~ \001(\001\022\021\n\tl_limit_5\030\177 \001(\001\022\022\n\tl_li"
    "mit_6\030\200\001 \001(\001\022\022\n\tu_limit_0\030\201\001 \001(\001\022\022\n\tu_li"
    "mit_1\030\202\001 \001(\001\022\022\n\tu_limit_2\030\203\001 \001(\001\022\022\n\tu_li"
    "mit_3\030\204\001 \001(\001\022\022\n\tu_limit_4\030\205\001 \001(\001\022\022\n\tu_li"
    "mit_5\030\206\001 \001(\001\022\022\n\tu_limit_6\030\207\001 \001(\001\022\016\n\005kapp"
    "a\030\210\001 \001(\001\022\013\n\002Kv\030\211\001 \001(\001\022\017\n\006lambda\030\212\001 \001(\001\022\013"
    "\n\002Kz\030\213\001 \001(\001\022\013\n\002Zb\030\214\001 \001(\001\022\n\n\001F\030\215\001 \001(\001\022\n\n\001"
    "G\030\216\001 \001(\001\022\021\n\010inParams\030\217\001 \001(\003\022\022\n\toutParams"
    "\030\220\001 \001(\003\022\024\n\013hiddenNodes\030\221\001 \001(\003\022\024\n\013errorPa"
    "rams\030\222\001 \001(\003\022\031\n\020feedForwardForce\030\223\001 \001(\001\022\016"
    "\n\005nn_ON\030\224\001 \001(\001\022\025\n\014cartPos_Kp_x\030\225\001 \001(\001\022\025\n"
    "\014cartPos_Kp_y\030\226\001 \001(\001\022\025\n\014cartPos_Kp_z\030\227\001 "
    "\001(\001\022\025\n\014cartPos_Kd_x\030\230\001 \001(\001\022\025\n\014cartPos_Kd"
    "_y\030\231\001 \001(\001\022\025\n\014cartPos_Kd_z\030\232\001 \001(\001\022\025\n\014cart"
    "Rot_Kp_x\030\233\001 \001(\001\022\025\n\014cartRot_Kp_y\030\234\001 \001(\001\022\025"
    "\n\014cartRot_Kp_z\030\235\001 \001(\001\022\025\n\014cartRot_Kd_x\030\236\001"
    " \001(\001\022\025\n\014cartRot_Kd_y\030\237\001 \001(\001\022\025\n\014cartRot_K"
    "d_z\030\240\001 \001(\001\022\033\n\022useCurrentCartPose\030\241\001 \001(\010\022"
    "\031\n\020useNullspacePose\030\242\001 \001(\010\022\021\n\010cartIniX\030\243"
    "\001 \001(\001\022\021\n\010cartIniY\030\244\001 \001(\001\022\021\n\010cartIniZ\030\245\001 "
    "\001(\001\022\024\n\013cartIniRoll\030\246\001 \001(\001\022\025\n\014cartIniPitc"
    "h\030\247\001 \001(\001\022\023\n\ncartIniYaw\030\250\001 \001(\001\022\021\n\010cartDes"
    "X\030\251\001 \001(\001\022\021\n\010cartDesY\030\252\001 \001(\001\022\021\n\010cartDesZ\030"
    "\253\001 \001(\001\022\024\n\013cartDesRoll\030\254\001 \001(\001\022\025\n\014cartDesP"
    "itch\030\255\001 \001(\001\022\023\n\ncartDesYaw\030\256\001 \001(\001\022\n\n\001m\030\257\001"
    " \001(\001\022\n\n\001d\030\260\001 \001(\001\022\n\n\001k\030\261\001 \001(\001\022\020\n\007task_mA\030"
    "\262\001 \001(\001\022\020\n\007task_mB\030\263\001 \001(\001\022\033\n\022fixedFilterW"
    "eights\030\264\001 \001(\001\022\013\n\002w0\030\266\001 \001(\001\022\013\n\002w1\030\267\001 \001(\001\022"
    "\013\n\002w2\030\270\001 \001(\001\022\013\n\002w3\030\271\001 \001(\001\022\013\n\002w4\030\272\001 \001(\001\022\013"
    "\n\002w5\030\273\001 \001(\001\022\013\n\002w6\030\274\001 \001(\001\022\013\n\002w7\030\275\001 \001(\001\"5\n"
    "\022controllerFullData\022\037\n\005datum\030\001 \003(\0132\020.dat"
    "aPoint.Datum", 3732);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "controllerFullData.proto", &protobuf_RegisterTypes);
  Datum::default_instance_ = new Datum();
  controllerFullData::default_instance_ = new controllerFullData();
  Datum::default_instance_->InitAsDefaultInstance();
  controllerFullData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_controllerFullData_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_controllerFullData_2eproto {
  StaticDescriptorInitializer_controllerFullData_2eproto() {
    protobuf_AddDesc_controllerFullData_2eproto();
  }
} static_descriptor_initializer_controllerFullData_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Datum::kDtFieldNumber;
const int Datum::kForceXFieldNumber;
const int Datum::kForceYFieldNumber;
const int Datum::kForceZFieldNumber;
const int Datum::kTorqueXFieldNumber;
const int Datum::kTorqueYFieldNumber;
const int Datum::kTorqueZFieldNumber;
const int Datum::kAccXFieldNumber;
const int Datum::kAccYFieldNumber;
const int Datum::kAccZFieldNumber;
const int Datum::kREffXFieldNumber;
const int Datum::kREffYFieldNumber;
const int Datum::kREffZFieldNumber;
const int Datum::kRTrqXFieldNumber;
const int Datum::kRTrqYFieldNumber;
const int Datum::kRTrqZFieldNumber;
const int Datum::kReferenceEffJ0FieldNumber;
const int Datum::kReferenceEffJ1FieldNumber;
const int Datum::kReferenceEffJ2FieldNumber;
const int Datum::kReferenceEffJ3FieldNumber;
const int Datum::kReferenceEffJ4FieldNumber;
const int Datum::kReferenceEffJ5FieldNumber;
const int Datum::kReferenceEffJ6FieldNumber;
const int Datum::kTaskRefXFieldNumber;
const int Datum::kTaskRefYFieldNumber;
const int Datum::kTaskRefZFieldNumber;
const int Datum::kTaskRefPhiFieldNumber;
const int Datum::kTaskRefThetaFieldNumber;
const int Datum::kTaskRefPsiFieldNumber;
const int Datum::kTaskRefModelXFieldNumber;
const int Datum::kTaskRefModelYFieldNumber;
const int Datum::kTaskRefModelZFieldNumber;
const int Datum::kTaskRefModelPhiFieldNumber;
const int Datum::kTaskRefModelThetaFieldNumber;
const int Datum::kTaskRefModelPsiFieldNumber;
const int Datum::kMCartPosXFieldNumber;
const int Datum::kMCartPosYFieldNumber;
const int Datum::kMCartPosZFieldNumber;
const int Datum::kMCartPosQxFieldNumber;
const int Datum::kMCartPosQyFieldNumber;
const int Datum::kMCartPosQzFieldNumber;
const int Datum::kMCartPosQWFieldNumber;
const int Datum::kMPosXFieldNumber;
const int Datum::kMPosYFieldNumber;
const int Datum::kMPosZFieldNumber;
const int Datum::kMVelXFieldNumber;
const int Datum::kMVelYFieldNumber;
const int Datum::kMVelZFieldNumber;
const int Datum::kMAccXFieldNumber;
const int Datum::kMAccYFieldNumber;
const int Datum::kMAccZFieldNumber;
const int Datum::kMPosJ0FieldNumber;
const int Datum::kMPosJ1FieldNumber;
const int Datum::kMPosJ2FieldNumber;
const int Datum::kMPosJ3FieldNumber;
const int Datum::kMPosJ4FieldNumber;
const int Datum::kMPosJ5FieldNumber;
const int Datum::kMPosJ6FieldNumber;
const int Datum::kMVelJ0FieldNumber;
const int Datum::kMVelJ1FieldNumber;
const int Datum::kMVelJ2FieldNumber;
const int Datum::kMVelJ3FieldNumber;
const int Datum::kMVelJ4FieldNumber;
const int Datum::kMVelJ5FieldNumber;
const int Datum::kMVelJ6FieldNumber;
const int Datum::kMAccJ0FieldNumber;
const int Datum::kMAccJ1FieldNumber;
const int Datum::kMAccJ2FieldNumber;
const int Datum::kMAccJ3FieldNumber;
const int Datum::kMAccJ4FieldNumber;
const int Datum::kMAccJ5FieldNumber;
const int Datum::kMAccJ6FieldNumber;
const int Datum::kMEffJ0FieldNumber;
const int Datum::kMEffJ1FieldNumber;
const int Datum::kMEffJ2FieldNumber;
const int Datum::kMEffJ3FieldNumber;
const int Datum::kMEffJ4FieldNumber;
const int Datum::kMEffJ5FieldNumber;
const int Datum::kMEffJ6FieldNumber;
const int Datum::kControlEffJ0FieldNumber;
const int Datum::kControlEffJ1FieldNumber;
const int Datum::kControlEffJ2FieldNumber;
const int Datum::kControlEffJ3FieldNumber;
const int Datum::kControlEffJ4FieldNumber;
const int Datum::kControlEffJ5FieldNumber;
const int Datum::kControlEffJ6FieldNumber;
const int Datum::kRCartPosXFieldNumber;
const int Datum::kRCartPosYFieldNumber;
const int Datum::kRCartPosZFieldNumber;
const int Datum::kRCartPosQxFieldNumber;
const int Datum::kRCartPosQyFieldNumber;
const int Datum::kRCartPosQzFieldNumber;
const int Datum::kRCartPosQWFieldNumber;
const int Datum::kRPosJ0FieldNumber;
const int Datum::kRPosJ1FieldNumber;
const int Datum::kRPosJ2FieldNumber;
const int Datum::kRPosJ3FieldNumber;
const int Datum::kRPosJ4FieldNumber;
const int Datum::kRPosJ5FieldNumber;
const int Datum::kRPosJ6FieldNumber;
const int Datum::kRVelJ0FieldNumber;
const int Datum::kRVelJ1FieldNumber;
const int Datum::kRVelJ2FieldNumber;
const int Datum::kRVelJ3FieldNumber;
const int Datum::kRVelJ4FieldNumber;
const int Datum::kRVelJ5FieldNumber;
const int Datum::kRVelJ6FieldNumber;
const int Datum::kRAccJ0FieldNumber;
const int Datum::kRAccJ1FieldNumber;
const int Datum::kRAccJ2FieldNumber;
const int Datum::kRAccJ3FieldNumber;
const int Datum::kRAccJ4FieldNumber;
const int Datum::kRAccJ5FieldNumber;
const int Datum::kRAccJ6FieldNumber;
const int Datum::kREffJ0FieldNumber;
const int Datum::kREffJ1FieldNumber;
const int Datum::kREffJ2FieldNumber;
const int Datum::kREffJ3FieldNumber;
const int Datum::kREffJ4FieldNumber;
const int Datum::kREffJ5FieldNumber;
const int Datum::kREffJ6FieldNumber;
const int Datum::kLLimit0FieldNumber;
const int Datum::kLLimit1FieldNumber;
const int Datum::kLLimit2FieldNumber;
const int Datum::kLLimit3FieldNumber;
const int Datum::kLLimit4FieldNumber;
const int Datum::kLLimit5FieldNumber;
const int Datum::kLLimit6FieldNumber;
const int Datum::kULimit0FieldNumber;
const int Datum::kULimit1FieldNumber;
const int Datum::kULimit2FieldNumber;
const int Datum::kULimit3FieldNumber;
const int Datum::kULimit4FieldNumber;
const int Datum::kULimit5FieldNumber;
const int Datum::kULimit6FieldNumber;
const int Datum::kKappaFieldNumber;
const int Datum::kKvFieldNumber;
const int Datum::kLambdaFieldNumber;
const int Datum::kKzFieldNumber;
const int Datum::kZbFieldNumber;
const int Datum::kFFieldNumber;
const int Datum::kGFieldNumber;
const int Datum::kInParamsFieldNumber;
const int Datum::kOutParamsFieldNumber;
const int Datum::kHiddenNodesFieldNumber;
const int Datum::kErrorParamsFieldNumber;
const int Datum::kFeedForwardForceFieldNumber;
const int Datum::kNnONFieldNumber;
const int Datum::kCartPosKpXFieldNumber;
const int Datum::kCartPosKpYFieldNumber;
const int Datum::kCartPosKpZFieldNumber;
const int Datum::kCartPosKdXFieldNumber;
const int Datum::kCartPosKdYFieldNumber;
const int Datum::kCartPosKdZFieldNumber;
const int Datum::kCartRotKpXFieldNumber;
const int Datum::kCartRotKpYFieldNumber;
const int Datum::kCartRotKpZFieldNumber;
const int Datum::kCartRotKdXFieldNumber;
const int Datum::kCartRotKdYFieldNumber;
const int Datum::kCartRotKdZFieldNumber;
const int Datum::kUseCurrentCartPoseFieldNumber;
const int Datum::kUseNullspacePoseFieldNumber;
const int Datum::kCartIniXFieldNumber;
const int Datum::kCartIniYFieldNumber;
const int Datum::kCartIniZFieldNumber;
const int Datum::kCartIniRollFieldNumber;
const int Datum::kCartIniPitchFieldNumber;
const int Datum::kCartIniYawFieldNumber;
const int Datum::kCartDesXFieldNumber;
const int Datum::kCartDesYFieldNumber;
const int Datum::kCartDesZFieldNumber;
const int Datum::kCartDesRollFieldNumber;
const int Datum::kCartDesPitchFieldNumber;
const int Datum::kCartDesYawFieldNumber;
const int Datum::kMFieldNumber;
const int Datum::kDFieldNumber;
const int Datum::kKFieldNumber;
const int Datum::kTaskMAFieldNumber;
const int Datum::kTaskMBFieldNumber;
const int Datum::kFixedFilterWeightsFieldNumber;
const int Datum::kW0FieldNumber;
const int Datum::kW1FieldNumber;
const int Datum::kW2FieldNumber;
const int Datum::kW3FieldNumber;
const int Datum::kW4FieldNumber;
const int Datum::kW5FieldNumber;
const int Datum::kW6FieldNumber;
const int Datum::kW7FieldNumber;
#endif  // !_MSC_VER

Datum::Datum()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Datum::InitAsDefaultInstance() {
}

Datum::Datum(const Datum& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Datum::SharedCtor() {
  _cached_size_ = 0;
  dt_ = 0;
  force_x_ = 0;
  force_y_ = 0;
  force_z_ = 0;
  torque_x_ = 0;
  torque_y_ = 0;
  torque_z_ = 0;
  acc_x_ = 0;
  acc_y_ = 0;
  acc_z_ = 0;
  r_eff_x_ = 0;
  r_eff_y_ = 0;
  r_eff_z_ = 0;
  r_trq_x_ = 0;
  r_trq_y_ = 0;
  r_trq_z_ = 0;
  reference_eff_j0_ = 0;
  reference_eff_j1_ = 0;
  reference_eff_j2_ = 0;
  reference_eff_j3_ = 0;
  reference_eff_j4_ = 0;
  reference_eff_j5_ = 0;
  reference_eff_j6_ = 0;
  taskref_x_ = 0;
  taskref_y_ = 0;
  taskref_z_ = 0;
  taskref_phi_ = 0;
  taskref_theta_ = 0;
  taskref_psi_ = 0;
  taskrefmodel_x_ = 0;
  taskrefmodel_y_ = 0;
  taskrefmodel_z_ = 0;
  taskrefmodel_phi_ = 0;
  taskrefmodel_theta_ = 0;
  taskrefmodel_psi_ = 0;
  m_cartpos_x_ = 0;
  m_cartpos_y_ = 0;
  m_cartpos_z_ = 0;
  m_cartpos_qx_ = 0;
  m_cartpos_qy_ = 0;
  m_cartpos_qz_ = 0;
  m_cartpos_qw_ = 0;
  m_pos_x_ = 0;
  m_pos_y_ = 0;
  m_pos_z_ = 0;
  m_vel_x_ = 0;
  m_vel_y_ = 0;
  m_vel_z_ = 0;
  m_acc_x_ = 0;
  m_acc_y_ = 0;
  m_acc_z_ = 0;
  m_pos_j0_ = 0;
  m_pos_j1_ = 0;
  m_pos_j2_ = 0;
  m_pos_j3_ = 0;
  m_pos_j4_ = 0;
  m_pos_j5_ = 0;
  m_pos_j6_ = 0;
  m_vel_j0_ = 0;
  m_vel_j1_ = 0;
  m_vel_j2_ = 0;
  m_vel_j3_ = 0;
  m_vel_j4_ = 0;
  m_vel_j5_ = 0;
  m_vel_j6_ = 0;
  m_acc_j0_ = 0;
  m_acc_j1_ = 0;
  m_acc_j2_ = 0;
  m_acc_j3_ = 0;
  m_acc_j4_ = 0;
  m_acc_j5_ = 0;
  m_acc_j6_ = 0;
  m_eff_j0_ = 0;
  m_eff_j1_ = 0;
  m_eff_j2_ = 0;
  m_eff_j3_ = 0;
  m_eff_j4_ = 0;
  m_eff_j5_ = 0;
  m_eff_j6_ = 0;
  control_eff_j0_ = 0;
  control_eff_j1_ = 0;
  control_eff_j2_ = 0;
  control_eff_j3_ = 0;
  control_eff_j4_ = 0;
  control_eff_j5_ = 0;
  control_eff_j6_ = 0;
  r_cartpos_x_ = 0;
  r_cartpos_y_ = 0;
  r_cartpos_z_ = 0;
  r_cartpos_qx_ = 0;
  r_cartpos_qy_ = 0;
  r_cartpos_qz_ = 0;
  r_cartpos_qw_ = 0;
  r_pos_j0_ = 0;
  r_pos_j1_ = 0;
  r_pos_j2_ = 0;
  r_pos_j3_ = 0;
  r_pos_j4_ = 0;
  r_pos_j5_ = 0;
  r_pos_j6_ = 0;
  r_vel_j0_ = 0;
  r_vel_j1_ = 0;
  r_vel_j2_ = 0;
  r_vel_j3_ = 0;
  r_vel_j4_ = 0;
  r_vel_j5_ = 0;
  r_vel_j6_ = 0;
  r_acc_j0_ = 0;
  r_acc_j1_ = 0;
  r_acc_j2_ = 0;
  r_acc_j3_ = 0;
  r_acc_j4_ = 0;
  r_acc_j5_ = 0;
  r_acc_j6_ = 0;
  r_eff_j0_ = 0;
  r_eff_j1_ = 0;
  r_eff_j2_ = 0;
  r_eff_j3_ = 0;
  r_eff_j4_ = 0;
  r_eff_j5_ = 0;
  r_eff_j6_ = 0;
  l_limit_0_ = 0;
  l_limit_1_ = 0;
  l_limit_2_ = 0;
  l_limit_3_ = 0;
  l_limit_4_ = 0;
  l_limit_5_ = 0;
  l_limit_6_ = 0;
  u_limit_0_ = 0;
  u_limit_1_ = 0;
  u_limit_2_ = 0;
  u_limit_3_ = 0;
  u_limit_4_ = 0;
  u_limit_5_ = 0;
  u_limit_6_ = 0;
  kappa_ = 0;
  kv_ = 0;
  lambda_ = 0;
  kz_ = 0;
  zb_ = 0;
  f_ = 0;
  g_ = 0;
  inparams_ = GOOGLE_LONGLONG(0);
  outparams_ = GOOGLE_LONGLONG(0);
  hiddennodes_ = GOOGLE_LONGLONG(0);
  errorparams_ = GOOGLE_LONGLONG(0);
  feedforwardforce_ = 0;
  nn_on_ = 0;
  cartpos_kp_x_ = 0;
  cartpos_kp_y_ = 0;
  cartpos_kp_z_ = 0;
  cartpos_kd_x_ = 0;
  cartpos_kd_y_ = 0;
  cartpos_kd_z_ = 0;
  cartrot_kp_x_ = 0;
  cartrot_kp_y_ = 0;
  cartrot_kp_z_ = 0;
  cartrot_kd_x_ = 0;
  cartrot_kd_y_ = 0;
  cartrot_kd_z_ = 0;
  usecurrentcartpose_ = false;
  usenullspacepose_ = false;
  cartinix_ = 0;
  cartiniy_ = 0;
  cartiniz_ = 0;
  cartiniroll_ = 0;
  cartinipitch_ = 0;
  cartiniyaw_ = 0;
  cartdesx_ = 0;
  cartdesy_ = 0;
  cartdesz_ = 0;
  cartdesroll_ = 0;
  cartdespitch_ = 0;
  cartdesyaw_ = 0;
  m_ = 0;
  d_ = 0;
  k_ = 0;
  task_ma_ = 0;
  task_mb_ = 0;
  fixedfilterweights_ = 0;
  w0_ = 0;
  w1_ = 0;
  w2_ = 0;
  w3_ = 0;
  w4_ = 0;
  w5_ = 0;
  w6_ = 0;
  w7_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Datum::~Datum() {
  SharedDtor();
}

void Datum::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Datum::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Datum::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Datum_descriptor_;
}

const Datum& Datum::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_controllerFullData_2eproto();
  return *default_instance_;
}

Datum* Datum::default_instance_ = NULL;

Datum* Datum::New() const {
  return new Datum;
}

void Datum::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    dt_ = 0;
    force_x_ = 0;
    force_y_ = 0;
    force_z_ = 0;
    torque_x_ = 0;
    torque_y_ = 0;
    torque_z_ = 0;
    acc_x_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    acc_y_ = 0;
    acc_z_ = 0;
    r_eff_x_ = 0;
    r_eff_y_ = 0;
    r_eff_z_ = 0;
    r_trq_x_ = 0;
    r_trq_y_ = 0;
    r_trq_z_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    reference_eff_j0_ = 0;
    reference_eff_j1_ = 0;
    reference_eff_j2_ = 0;
    reference_eff_j3_ = 0;
    reference_eff_j4_ = 0;
    reference_eff_j5_ = 0;
    reference_eff_j6_ = 0;
    taskref_x_ = 0;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    taskref_y_ = 0;
    taskref_z_ = 0;
    taskref_phi_ = 0;
    taskref_theta_ = 0;
    taskref_psi_ = 0;
    taskrefmodel_x_ = 0;
    taskrefmodel_y_ = 0;
    taskrefmodel_z_ = 0;
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    taskrefmodel_phi_ = 0;
    taskrefmodel_theta_ = 0;
    taskrefmodel_psi_ = 0;
    m_cartpos_x_ = 0;
    m_cartpos_y_ = 0;
    m_cartpos_z_ = 0;
    m_cartpos_qx_ = 0;
    m_cartpos_qy_ = 0;
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    m_cartpos_qz_ = 0;
    m_cartpos_qw_ = 0;
    m_pos_x_ = 0;
    m_pos_y_ = 0;
    m_pos_z_ = 0;
    m_vel_x_ = 0;
    m_vel_y_ = 0;
    m_vel_z_ = 0;
  }
  if (_has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    m_acc_x_ = 0;
    m_acc_y_ = 0;
    m_acc_z_ = 0;
    m_pos_j0_ = 0;
    m_pos_j1_ = 0;
    m_pos_j2_ = 0;
    m_pos_j3_ = 0;
    m_pos_j4_ = 0;
  }
  if (_has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    m_pos_j5_ = 0;
    m_pos_j6_ = 0;
    m_vel_j0_ = 0;
    m_vel_j1_ = 0;
    m_vel_j2_ = 0;
    m_vel_j3_ = 0;
    m_vel_j4_ = 0;
    m_vel_j5_ = 0;
  }
  if (_has_bits_[64 / 32] & (0xffu << (64 % 32))) {
    m_vel_j6_ = 0;
    m_acc_j0_ = 0;
    m_acc_j1_ = 0;
    m_acc_j2_ = 0;
    m_acc_j3_ = 0;
    m_acc_j4_ = 0;
    m_acc_j5_ = 0;
    m_acc_j6_ = 0;
  }
  if (_has_bits_[72 / 32] & (0xffu << (72 % 32))) {
    m_eff_j0_ = 0;
    m_eff_j1_ = 0;
    m_eff_j2_ = 0;
    m_eff_j3_ = 0;
    m_eff_j4_ = 0;
    m_eff_j5_ = 0;
    m_eff_j6_ = 0;
    control_eff_j0_ = 0;
  }
  if (_has_bits_[80 / 32] & (0xffu << (80 % 32))) {
    control_eff_j1_ = 0;
    control_eff_j2_ = 0;
    control_eff_j3_ = 0;
    control_eff_j4_ = 0;
    control_eff_j5_ = 0;
    control_eff_j6_ = 0;
    r_cartpos_x_ = 0;
    r_cartpos_y_ = 0;
  }
  if (_has_bits_[88 / 32] & (0xffu << (88 % 32))) {
    r_cartpos_z_ = 0;
    r_cartpos_qx_ = 0;
    r_cartpos_qy_ = 0;
    r_cartpos_qz_ = 0;
    r_cartpos_qw_ = 0;
    r_pos_j0_ = 0;
    r_pos_j1_ = 0;
    r_pos_j2_ = 0;
  }
  if (_has_bits_[96 / 32] & (0xffu << (96 % 32))) {
    r_pos_j3_ = 0;
    r_pos_j4_ = 0;
    r_pos_j5_ = 0;
    r_pos_j6_ = 0;
    r_vel_j0_ = 0;
    r_vel_j1_ = 0;
    r_vel_j2_ = 0;
    r_vel_j3_ = 0;
  }
  if (_has_bits_[104 / 32] & (0xffu << (104 % 32))) {
    r_vel_j4_ = 0;
    r_vel_j5_ = 0;
    r_vel_j6_ = 0;
    r_acc_j0_ = 0;
    r_acc_j1_ = 0;
    r_acc_j2_ = 0;
    r_acc_j3_ = 0;
    r_acc_j4_ = 0;
  }
  if (_has_bits_[112 / 32] & (0xffu << (112 % 32))) {
    r_acc_j5_ = 0;
    r_acc_j6_ = 0;
    r_eff_j0_ = 0;
    r_eff_j1_ = 0;
    r_eff_j2_ = 0;
    r_eff_j3_ = 0;
    r_eff_j4_ = 0;
    r_eff_j5_ = 0;
  }
  if (_has_bits_[120 / 32] & (0xffu << (120 % 32))) {
    r_eff_j6_ = 0;
    l_limit_0_ = 0;
    l_limit_1_ = 0;
    l_limit_2_ = 0;
    l_limit_3_ = 0;
    l_limit_4_ = 0;
    l_limit_5_ = 0;
    l_limit_6_ = 0;
  }
  if (_has_bits_[128 / 32] & (0xffu << (128 % 32))) {
    u_limit_0_ = 0;
    u_limit_1_ = 0;
    u_limit_2_ = 0;
    u_limit_3_ = 0;
    u_limit_4_ = 0;
    u_limit_5_ = 0;
    u_limit_6_ = 0;
    kappa_ = 0;
  }
  if (_has_bits_[136 / 32] & (0xffu << (136 % 32))) {
    kv_ = 0;
    lambda_ = 0;
    kz_ = 0;
    zb_ = 0;
    f_ = 0;
    g_ = 0;
    inparams_ = GOOGLE_LONGLONG(0);
    outparams_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[144 / 32] & (0xffu << (144 % 32))) {
    hiddennodes_ = GOOGLE_LONGLONG(0);
    errorparams_ = GOOGLE_LONGLONG(0);
    feedforwardforce_ = 0;
    nn_on_ = 0;
    cartpos_kp_x_ = 0;
    cartpos_kp_y_ = 0;
    cartpos_kp_z_ = 0;
    cartpos_kd_x_ = 0;
  }
  if (_has_bits_[152 / 32] & (0xffu << (152 % 32))) {
    cartpos_kd_y_ = 0;
    cartpos_kd_z_ = 0;
    cartrot_kp_x_ = 0;
    cartrot_kp_y_ = 0;
    cartrot_kp_z_ = 0;
    cartrot_kd_x_ = 0;
    cartrot_kd_y_ = 0;
    cartrot_kd_z_ = 0;
  }
  if (_has_bits_[160 / 32] & (0xffu << (160 % 32))) {
    usecurrentcartpose_ = false;
    usenullspacepose_ = false;
    cartinix_ = 0;
    cartiniy_ = 0;
    cartiniz_ = 0;
    cartiniroll_ = 0;
    cartinipitch_ = 0;
    cartiniyaw_ = 0;
  }
  if (_has_bits_[168 / 32] & (0xffu << (168 % 32))) {
    cartdesx_ = 0;
    cartdesy_ = 0;
    cartdesz_ = 0;
    cartdesroll_ = 0;
    cartdespitch_ = 0;
    cartdesyaw_ = 0;
    m_ = 0;
    d_ = 0;
  }
  if (_has_bits_[176 / 32] & (0xffu << (176 % 32))) {
    k_ = 0;
    task_ma_ = 0;
    task_mb_ = 0;
    fixedfilterweights_ = 0;
    w0_ = 0;
    w1_ = 0;
    w2_ = 0;
    w3_ = 0;
  }
  if (_has_bits_[184 / 32] & (0xffu << (184 % 32))) {
    w4_ = 0;
    w5_ = 0;
    w6_ = 0;
    w7_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Datum::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double dt = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dt_)));
          set_has_dt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(17)) goto parse_force_x;
        break;
      }

      // optional double force_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_force_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &force_x_)));
          set_has_force_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(25)) goto parse_force_y;
        break;
      }

      // optional double force_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_force_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &force_y_)));
          set_has_force_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(33)) goto parse_force_z;
        break;
      }

      // optional double force_z = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_force_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &force_z_)));
          set_has_force_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(41)) goto parse_torque_x;
        break;
      }

      // optional double torque_x = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_torque_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &torque_x_)));
          set_has_torque_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(49)) goto parse_torque_y;
        break;
      }

      // optional double torque_y = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_torque_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &torque_y_)));
          set_has_torque_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(57)) goto parse_torque_z;
        break;
      }

      // optional double torque_z = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_torque_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &torque_z_)));
          set_has_torque_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(65)) goto parse_acc_x;
        break;
      }

      // optional double acc_x = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_acc_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &acc_x_)));
          set_has_acc_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(73)) goto parse_acc_y;
        break;
      }

      // optional double acc_y = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_acc_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &acc_y_)));
          set_has_acc_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(81)) goto parse_acc_z;
        break;
      }

      // optional double acc_z = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_acc_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &acc_z_)));
          set_has_acc_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(89)) goto parse_r_eff_x;
        break;
      }

      // optional double r_eff_x = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_eff_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_eff_x_)));
          set_has_r_eff_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(97)) goto parse_r_eff_y;
        break;
      }

      // optional double r_eff_y = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_eff_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_eff_y_)));
          set_has_r_eff_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(105)) goto parse_r_eff_z;
        break;
      }

      // optional double r_eff_z = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_eff_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_eff_z_)));
          set_has_r_eff_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(113)) goto parse_r_trq_x;
        break;
      }

      // optional double r_trq_x = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_trq_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_trq_x_)));
          set_has_r_trq_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(121)) goto parse_r_trq_y;
        break;
      }

      // optional double r_trq_y = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_trq_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_trq_y_)));
          set_has_r_trq_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(129)) goto parse_r_trq_z;
        break;
      }

      // optional double r_trq_z = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_trq_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_trq_z_)));
          set_has_r_trq_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(137)) goto parse_reference_eff_j0;
        break;
      }

      // optional double reference_eff_j0 = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_reference_eff_j0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reference_eff_j0_)));
          set_has_reference_eff_j0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(145)) goto parse_reference_eff_j1;
        break;
      }

      // optional double reference_eff_j1 = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_reference_eff_j1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reference_eff_j1_)));
          set_has_reference_eff_j1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(153)) goto parse_reference_eff_j2;
        break;
      }

      // optional double reference_eff_j2 = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_reference_eff_j2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reference_eff_j2_)));
          set_has_reference_eff_j2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(161)) goto parse_reference_eff_j3;
        break;
      }

      // optional double reference_eff_j3 = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_reference_eff_j3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reference_eff_j3_)));
          set_has_reference_eff_j3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(169)) goto parse_reference_eff_j4;
        break;
      }

      // optional double reference_eff_j4 = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_reference_eff_j4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reference_eff_j4_)));
          set_has_reference_eff_j4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(177)) goto parse_reference_eff_j5;
        break;
      }

      // optional double reference_eff_j5 = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_reference_eff_j5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reference_eff_j5_)));
          set_has_reference_eff_j5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(185)) goto parse_reference_eff_j6;
        break;
      }

      // optional double reference_eff_j6 = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_reference_eff_j6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reference_eff_j6_)));
          set_has_reference_eff_j6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(193)) goto parse_taskRef_x;
        break;
      }

      // optional double taskRef_x = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_taskRef_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &taskref_x_)));
          set_has_taskref_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(201)) goto parse_taskRef_y;
        break;
      }

      // optional double taskRef_y = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_taskRef_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &taskref_y_)));
          set_has_taskref_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(209)) goto parse_taskRef_z;
        break;
      }

      // optional double taskRef_z = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_taskRef_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &taskref_z_)));
          set_has_taskref_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(217)) goto parse_taskRef_phi;
        break;
      }

      // optional double taskRef_phi = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_taskRef_phi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &taskref_phi_)));
          set_has_taskref_phi();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(225)) goto parse_taskRef_theta;
        break;
      }

      // optional double taskRef_theta = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_taskRef_theta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &taskref_theta_)));
          set_has_taskref_theta();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(233)) goto parse_taskRef_psi;
        break;
      }

      // optional double taskRef_psi = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_taskRef_psi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &taskref_psi_)));
          set_has_taskref_psi();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(241)) goto parse_taskRefModel_x;
        break;
      }

      // optional double taskRefModel_x = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_taskRefModel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &taskrefmodel_x_)));
          set_has_taskrefmodel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(249)) goto parse_taskRefModel_y;
        break;
      }

      // optional double taskRefModel_y = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_taskRefModel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &taskrefmodel_y_)));
          set_has_taskrefmodel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(257)) goto parse_taskRefModel_z;
        break;
      }

      // optional double taskRefModel_z = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_taskRefModel_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &taskrefmodel_z_)));
          set_has_taskrefmodel_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(265)) goto parse_taskRefModel_phi;
        break;
      }

      // optional double taskRefModel_phi = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_taskRefModel_phi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &taskrefmodel_phi_)));
          set_has_taskrefmodel_phi();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(273)) goto parse_taskRefModel_theta;
        break;
      }

      // optional double taskRefModel_theta = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_taskRefModel_theta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &taskrefmodel_theta_)));
          set_has_taskrefmodel_theta();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(281)) goto parse_taskRefModel_psi;
        break;
      }

      // optional double taskRefModel_psi = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_taskRefModel_psi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &taskrefmodel_psi_)));
          set_has_taskrefmodel_psi();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(289)) goto parse_m_cartPos_x;
        break;
      }

      // optional double m_cartPos_x = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_cartPos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_cartpos_x_)));
          set_has_m_cartpos_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(297)) goto parse_m_cartPos_y;
        break;
      }

      // optional double m_cartPos_y = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_cartPos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_cartpos_y_)));
          set_has_m_cartpos_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(305)) goto parse_m_cartPos_z;
        break;
      }

      // optional double m_cartPos_z = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_cartPos_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_cartpos_z_)));
          set_has_m_cartpos_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(313)) goto parse_m_cartPos_Qx;
        break;
      }

      // optional double m_cartPos_Qx = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_cartPos_Qx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_cartpos_qx_)));
          set_has_m_cartpos_qx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(321)) goto parse_m_cartPos_Qy;
        break;
      }

      // optional double m_cartPos_Qy = 40;
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_cartPos_Qy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_cartpos_qy_)));
          set_has_m_cartpos_qy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(329)) goto parse_m_cartPos_Qz;
        break;
      }

      // optional double m_cartPos_Qz = 41;
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_cartPos_Qz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_cartpos_qz_)));
          set_has_m_cartpos_qz();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(337)) goto parse_m_cartPos_QW;
        break;
      }

      // optional double m_cartPos_QW = 42;
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_cartPos_QW:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_cartpos_qw_)));
          set_has_m_cartpos_qw();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(345)) goto parse_m_pos_x;
        break;
      }

      // optional double m_pos_x = 43;
      case 43: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_pos_x_)));
          set_has_m_pos_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(353)) goto parse_m_pos_y;
        break;
      }

      // optional double m_pos_y = 44;
      case 44: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_pos_y_)));
          set_has_m_pos_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(361)) goto parse_m_pos_z;
        break;
      }

      // optional double m_pos_z = 45;
      case 45: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_pos_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_pos_z_)));
          set_has_m_pos_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(369)) goto parse_m_vel_x;
        break;
      }

      // optional double m_vel_x = 46;
      case 46: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_vel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_vel_x_)));
          set_has_m_vel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(377)) goto parse_m_vel_y;
        break;
      }

      // optional double m_vel_y = 47;
      case 47: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_vel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_vel_y_)));
          set_has_m_vel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(385)) goto parse_m_vel_z;
        break;
      }

      // optional double m_vel_z = 48;
      case 48: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_vel_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_vel_z_)));
          set_has_m_vel_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(393)) goto parse_m_acc_x;
        break;
      }

      // optional double m_acc_x = 49;
      case 49: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_acc_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_acc_x_)));
          set_has_m_acc_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(401)) goto parse_m_acc_y;
        break;
      }

      // optional double m_acc_y = 50;
      case 50: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_acc_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_acc_y_)));
          set_has_m_acc_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(409)) goto parse_m_acc_z;
        break;
      }

      // optional double m_acc_z = 51;
      case 51: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_acc_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_acc_z_)));
          set_has_m_acc_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(417)) goto parse_m_pos_j0;
        break;
      }

      // optional double m_pos_j0 = 52;
      case 52: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_pos_j0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_pos_j0_)));
          set_has_m_pos_j0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(425)) goto parse_m_pos_j1;
        break;
      }

      // optional double m_pos_j1 = 53;
      case 53: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_pos_j1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_pos_j1_)));
          set_has_m_pos_j1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(433)) goto parse_m_pos_j2;
        break;
      }

      // optional double m_pos_j2 = 54;
      case 54: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_pos_j2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_pos_j2_)));
          set_has_m_pos_j2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(441)) goto parse_m_pos_j3;
        break;
      }

      // optional double m_pos_j3 = 55;
      case 55: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_pos_j3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_pos_j3_)));
          set_has_m_pos_j3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(449)) goto parse_m_pos_j4;
        break;
      }

      // optional double m_pos_j4 = 56;
      case 56: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_pos_j4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_pos_j4_)));
          set_has_m_pos_j4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(457)) goto parse_m_pos_j5;
        break;
      }

      // optional double m_pos_j5 = 57;
      case 57: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_pos_j5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_pos_j5_)));
          set_has_m_pos_j5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(465)) goto parse_m_pos_j6;
        break;
      }

      // optional double m_pos_j6 = 58;
      case 58: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_pos_j6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_pos_j6_)));
          set_has_m_pos_j6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(473)) goto parse_m_vel_j0;
        break;
      }

      // optional double m_vel_j0 = 59;
      case 59: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_vel_j0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_vel_j0_)));
          set_has_m_vel_j0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(481)) goto parse_m_vel_j1;
        break;
      }

      // optional double m_vel_j1 = 60;
      case 60: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_vel_j1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_vel_j1_)));
          set_has_m_vel_j1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(489)) goto parse_m_vel_j2;
        break;
      }

      // optional double m_vel_j2 = 61;
      case 61: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_vel_j2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_vel_j2_)));
          set_has_m_vel_j2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(497)) goto parse_m_vel_j3;
        break;
      }

      // optional double m_vel_j3 = 62;
      case 62: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_vel_j3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_vel_j3_)));
          set_has_m_vel_j3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(505)) goto parse_m_vel_j4;
        break;
      }

      // optional double m_vel_j4 = 63;
      case 63: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_vel_j4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_vel_j4_)));
          set_has_m_vel_j4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(513)) goto parse_m_vel_j5;
        break;
      }

      // optional double m_vel_j5 = 64;
      case 64: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_vel_j5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_vel_j5_)));
          set_has_m_vel_j5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(521)) goto parse_m_vel_j6;
        break;
      }

      // optional double m_vel_j6 = 65;
      case 65: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_vel_j6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_vel_j6_)));
          set_has_m_vel_j6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(529)) goto parse_m_acc_j0;
        break;
      }

      // optional double m_acc_j0 = 66;
      case 66: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_acc_j0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_acc_j0_)));
          set_has_m_acc_j0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(537)) goto parse_m_acc_j1;
        break;
      }

      // optional double m_acc_j1 = 67;
      case 67: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_acc_j1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_acc_j1_)));
          set_has_m_acc_j1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(545)) goto parse_m_acc_j2;
        break;
      }

      // optional double m_acc_j2 = 68;
      case 68: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_acc_j2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_acc_j2_)));
          set_has_m_acc_j2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(553)) goto parse_m_acc_j3;
        break;
      }

      // optional double m_acc_j3 = 69;
      case 69: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_acc_j3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_acc_j3_)));
          set_has_m_acc_j3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(561)) goto parse_m_acc_j4;
        break;
      }

      // optional double m_acc_j4 = 70;
      case 70: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_acc_j4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_acc_j4_)));
          set_has_m_acc_j4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(569)) goto parse_m_acc_j5;
        break;
      }

      // optional double m_acc_j5 = 71;
      case 71: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_acc_j5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_acc_j5_)));
          set_has_m_acc_j5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(577)) goto parse_m_acc_j6;
        break;
      }

      // optional double m_acc_j6 = 72;
      case 72: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_acc_j6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_acc_j6_)));
          set_has_m_acc_j6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(585)) goto parse_m_eff_j0;
        break;
      }

      // optional double m_eff_j0 = 73;
      case 73: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_eff_j0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_eff_j0_)));
          set_has_m_eff_j0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(593)) goto parse_m_eff_j1;
        break;
      }

      // optional double m_eff_j1 = 74;
      case 74: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_eff_j1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_eff_j1_)));
          set_has_m_eff_j1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(601)) goto parse_m_eff_j2;
        break;
      }

      // optional double m_eff_j2 = 75;
      case 75: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_eff_j2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_eff_j2_)));
          set_has_m_eff_j2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(609)) goto parse_m_eff_j3;
        break;
      }

      // optional double m_eff_j3 = 76;
      case 76: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_eff_j3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_eff_j3_)));
          set_has_m_eff_j3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(617)) goto parse_m_eff_j4;
        break;
      }

      // optional double m_eff_j4 = 77;
      case 77: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_eff_j4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_eff_j4_)));
          set_has_m_eff_j4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(625)) goto parse_m_eff_j5;
        break;
      }

      // optional double m_eff_j5 = 78;
      case 78: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_eff_j5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_eff_j5_)));
          set_has_m_eff_j5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(633)) goto parse_m_eff_j6;
        break;
      }

      // optional double m_eff_j6 = 79;
      case 79: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m_eff_j6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_eff_j6_)));
          set_has_m_eff_j6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(641)) goto parse_control_eff_j0;
        break;
      }

      // optional double control_eff_j0 = 80;
      case 80: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_control_eff_j0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &control_eff_j0_)));
          set_has_control_eff_j0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(649)) goto parse_control_eff_j1;
        break;
      }

      // optional double control_eff_j1 = 81;
      case 81: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_control_eff_j1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &control_eff_j1_)));
          set_has_control_eff_j1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(657)) goto parse_control_eff_j2;
        break;
      }

      // optional double control_eff_j2 = 82;
      case 82: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_control_eff_j2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &control_eff_j2_)));
          set_has_control_eff_j2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(665)) goto parse_control_eff_j3;
        break;
      }

      // optional double control_eff_j3 = 83;
      case 83: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_control_eff_j3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &control_eff_j3_)));
          set_has_control_eff_j3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(673)) goto parse_control_eff_j4;
        break;
      }

      // optional double control_eff_j4 = 84;
      case 84: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_control_eff_j4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &control_eff_j4_)));
          set_has_control_eff_j4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(681)) goto parse_control_eff_j5;
        break;
      }

      // optional double control_eff_j5 = 85;
      case 85: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_control_eff_j5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &control_eff_j5_)));
          set_has_control_eff_j5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(689)) goto parse_control_eff_j6;
        break;
      }

      // optional double control_eff_j6 = 86;
      case 86: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_control_eff_j6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &control_eff_j6_)));
          set_has_control_eff_j6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(697)) goto parse_r_cartPos_x;
        break;
      }

      // optional double r_cartPos_x = 87;
      case 87: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_cartPos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_cartpos_x_)));
          set_has_r_cartpos_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(705)) goto parse_r_cartPos_y;
        break;
      }

      // optional double r_cartPos_y = 88;
      case 88: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_cartPos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_cartpos_y_)));
          set_has_r_cartpos_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(713)) goto parse_r_cartPos_z;
        break;
      }

      // optional double r_cartPos_z = 89;
      case 89: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_cartPos_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_cartpos_z_)));
          set_has_r_cartpos_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(721)) goto parse_r_cartPos_Qx;
        break;
      }

      // optional double r_cartPos_Qx = 90;
      case 90: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_cartPos_Qx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_cartpos_qx_)));
          set_has_r_cartpos_qx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(729)) goto parse_r_cartPos_Qy;
        break;
      }

      // optional double r_cartPos_Qy = 91;
      case 91: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_cartPos_Qy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_cartpos_qy_)));
          set_has_r_cartpos_qy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(737)) goto parse_r_cartPos_Qz;
        break;
      }

      // optional double r_cartPos_Qz = 92;
      case 92: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_cartPos_Qz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_cartpos_qz_)));
          set_has_r_cartpos_qz();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(745)) goto parse_r_cartPos_QW;
        break;
      }

      // optional double r_cartPos_QW = 93;
      case 93: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_cartPos_QW:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_cartpos_qw_)));
          set_has_r_cartpos_qw();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(753)) goto parse_r_pos_j0;
        break;
      }

      // optional double r_pos_j0 = 94;
      case 94: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_pos_j0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_pos_j0_)));
          set_has_r_pos_j0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(761)) goto parse_r_pos_j1;
        break;
      }

      // optional double r_pos_j1 = 95;
      case 95: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_pos_j1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_pos_j1_)));
          set_has_r_pos_j1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(769)) goto parse_r_pos_j2;
        break;
      }

      // optional double r_pos_j2 = 96;
      case 96: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_pos_j2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_pos_j2_)));
          set_has_r_pos_j2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(777)) goto parse_r_pos_j3;
        break;
      }

      // optional double r_pos_j3 = 97;
      case 97: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_pos_j3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_pos_j3_)));
          set_has_r_pos_j3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(785)) goto parse_r_pos_j4;
        break;
      }

      // optional double r_pos_j4 = 98;
      case 98: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_pos_j4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_pos_j4_)));
          set_has_r_pos_j4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(793)) goto parse_r_pos_j5;
        break;
      }

      // optional double r_pos_j5 = 99;
      case 99: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_pos_j5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_pos_j5_)));
          set_has_r_pos_j5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(801)) goto parse_r_pos_j6;
        break;
      }

      // optional double r_pos_j6 = 100;
      case 100: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_pos_j6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_pos_j6_)));
          set_has_r_pos_j6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(809)) goto parse_r_vel_j0;
        break;
      }

      // optional double r_vel_j0 = 101;
      case 101: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_vel_j0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_vel_j0_)));
          set_has_r_vel_j0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(817)) goto parse_r_vel_j1;
        break;
      }

      // optional double r_vel_j1 = 102;
      case 102: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_vel_j1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_vel_j1_)));
          set_has_r_vel_j1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(825)) goto parse_r_vel_j2;
        break;
      }

      // optional double r_vel_j2 = 103;
      case 103: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_vel_j2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_vel_j2_)));
          set_has_r_vel_j2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(833)) goto parse_r_vel_j3;
        break;
      }

      // optional double r_vel_j3 = 104;
      case 104: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_vel_j3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_vel_j3_)));
          set_has_r_vel_j3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(841)) goto parse_r_vel_j4;
        break;
      }

      // optional double r_vel_j4 = 105;
      case 105: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_vel_j4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_vel_j4_)));
          set_has_r_vel_j4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(849)) goto parse_r_vel_j5;
        break;
      }

      // optional double r_vel_j5 = 106;
      case 106: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_vel_j5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_vel_j5_)));
          set_has_r_vel_j5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(857)) goto parse_r_vel_j6;
        break;
      }

      // optional double r_vel_j6 = 107;
      case 107: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_vel_j6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_vel_j6_)));
          set_has_r_vel_j6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(865)) goto parse_r_acc_j0;
        break;
      }

      // optional double r_acc_j0 = 108;
      case 108: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_acc_j0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_acc_j0_)));
          set_has_r_acc_j0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(873)) goto parse_r_acc_j1;
        break;
      }

      // optional double r_acc_j1 = 109;
      case 109: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_acc_j1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_acc_j1_)));
          set_has_r_acc_j1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(881)) goto parse_r_acc_j2;
        break;
      }

      // optional double r_acc_j2 = 110;
      case 110: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_acc_j2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_acc_j2_)));
          set_has_r_acc_j2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(889)) goto parse_r_acc_j3;
        break;
      }

      // optional double r_acc_j3 = 111;
      case 111: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_acc_j3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_acc_j3_)));
          set_has_r_acc_j3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(897)) goto parse_r_acc_j4;
        break;
      }

      // optional double r_acc_j4 = 112;
      case 112: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_acc_j4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_acc_j4_)));
          set_has_r_acc_j4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(905)) goto parse_r_acc_j5;
        break;
      }

      // optional double r_acc_j5 = 113;
      case 113: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_acc_j5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_acc_j5_)));
          set_has_r_acc_j5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(913)) goto parse_r_acc_j6;
        break;
      }

      // optional double r_acc_j6 = 114;
      case 114: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_acc_j6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_acc_j6_)));
          set_has_r_acc_j6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(921)) goto parse_r_eff_j0;
        break;
      }

      // optional double r_eff_j0 = 115;
      case 115: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_eff_j0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_eff_j0_)));
          set_has_r_eff_j0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(929)) goto parse_r_eff_j1;
        break;
      }

      // optional double r_eff_j1 = 116;
      case 116: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_eff_j1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_eff_j1_)));
          set_has_r_eff_j1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(937)) goto parse_r_eff_j2;
        break;
      }

      // optional double r_eff_j2 = 117;
      case 117: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_eff_j2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_eff_j2_)));
          set_has_r_eff_j2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(945)) goto parse_r_eff_j3;
        break;
      }

      // optional double r_eff_j3 = 118;
      case 118: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_eff_j3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_eff_j3_)));
          set_has_r_eff_j3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(953)) goto parse_r_eff_j4;
        break;
      }

      // optional double r_eff_j4 = 119;
      case 119: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_eff_j4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_eff_j4_)));
          set_has_r_eff_j4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(961)) goto parse_r_eff_j5;
        break;
      }

      // optional double r_eff_j5 = 120;
      case 120: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_eff_j5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_eff_j5_)));
          set_has_r_eff_j5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(969)) goto parse_r_eff_j6;
        break;
      }

      // optional double r_eff_j6 = 121;
      case 121: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_r_eff_j6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_eff_j6_)));
          set_has_r_eff_j6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(977)) goto parse_l_limit_0;
        break;
      }

      // optional double l_limit_0 = 122;
      case 122: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_l_limit_0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &l_limit_0_)));
          set_has_l_limit_0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(985)) goto parse_l_limit_1;
        break;
      }

      // optional double l_limit_1 = 123;
      case 123: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_l_limit_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &l_limit_1_)));
          set_has_l_limit_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(993)) goto parse_l_limit_2;
        break;
      }

      // optional double l_limit_2 = 124;
      case 124: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_l_limit_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &l_limit_2_)));
          set_has_l_limit_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1001)) goto parse_l_limit_3;
        break;
      }

      // optional double l_limit_3 = 125;
      case 125: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_l_limit_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &l_limit_3_)));
          set_has_l_limit_3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1009)) goto parse_l_limit_4;
        break;
      }

      // optional double l_limit_4 = 126;
      case 126: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_l_limit_4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &l_limit_4_)));
          set_has_l_limit_4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1017)) goto parse_l_limit_5;
        break;
      }

      // optional double l_limit_5 = 127;
      case 127: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_l_limit_5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &l_limit_5_)));
          set_has_l_limit_5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1025)) goto parse_l_limit_6;
        break;
      }

      // optional double l_limit_6 = 128;
      case 128: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_l_limit_6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &l_limit_6_)));
          set_has_l_limit_6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1033)) goto parse_u_limit_0;
        break;
      }

      // optional double u_limit_0 = 129;
      case 129: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_u_limit_0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &u_limit_0_)));
          set_has_u_limit_0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1041)) goto parse_u_limit_1;
        break;
      }

      // optional double u_limit_1 = 130;
      case 130: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_u_limit_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &u_limit_1_)));
          set_has_u_limit_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1049)) goto parse_u_limit_2;
        break;
      }

      // optional double u_limit_2 = 131;
      case 131: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_u_limit_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &u_limit_2_)));
          set_has_u_limit_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1057)) goto parse_u_limit_3;
        break;
      }

      // optional double u_limit_3 = 132;
      case 132: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_u_limit_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &u_limit_3_)));
          set_has_u_limit_3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1065)) goto parse_u_limit_4;
        break;
      }

      // optional double u_limit_4 = 133;
      case 133: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_u_limit_4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &u_limit_4_)));
          set_has_u_limit_4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1073)) goto parse_u_limit_5;
        break;
      }

      // optional double u_limit_5 = 134;
      case 134: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_u_limit_5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &u_limit_5_)));
          set_has_u_limit_5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1081)) goto parse_u_limit_6;
        break;
      }

      // optional double u_limit_6 = 135;
      case 135: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_u_limit_6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &u_limit_6_)));
          set_has_u_limit_6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1089)) goto parse_kappa;
        break;
      }

      // optional double kappa = 136;
      case 136: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_kappa:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &kappa_)));
          set_has_kappa();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1097)) goto parse_Kv;
        break;
      }

      // optional double Kv = 137;
      case 137: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_Kv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &kv_)));
          set_has_kv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1105)) goto parse_lambda;
        break;
      }

      // optional double lambda = 138;
      case 138: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_lambda:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lambda_)));
          set_has_lambda();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1113)) goto parse_Kz;
        break;
      }

      // optional double Kz = 139;
      case 139: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_Kz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &kz_)));
          set_has_kz();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1121)) goto parse_Zb;
        break;
      }

      // optional double Zb = 140;
      case 140: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_Zb:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &zb_)));
          set_has_zb();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1129)) goto parse_F;
        break;
      }

      // optional double F = 141;
      case 141: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_F:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &f_)));
          set_has_f();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1137)) goto parse_G;
        break;
      }

      // optional double G = 142;
      case 142: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_G:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &g_)));
          set_has_g();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1144)) goto parse_inParams;
        break;
      }

      // optional int64 inParams = 143;
      case 143: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_inParams:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &inparams_)));
          set_has_inparams();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1152)) goto parse_outParams;
        break;
      }

      // optional int64 outParams = 144;
      case 144: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_outParams:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &outparams_)));
          set_has_outparams();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1160)) goto parse_hiddenNodes;
        break;
      }

      // optional int64 hiddenNodes = 145;
      case 145: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hiddenNodes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &hiddennodes_)));
          set_has_hiddennodes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1168)) goto parse_errorParams;
        break;
      }

      // optional int64 errorParams = 146;
      case 146: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_errorParams:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &errorparams_)));
          set_has_errorparams();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1177)) goto parse_feedForwardForce;
        break;
      }

      // optional double feedForwardForce = 147;
      case 147: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_feedForwardForce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &feedforwardforce_)));
          set_has_feedforwardforce();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1185)) goto parse_nn_ON;
        break;
      }

      // optional double nn_ON = 148;
      case 148: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_nn_ON:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &nn_on_)));
          set_has_nn_on();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1193)) goto parse_cartPos_Kp_x;
        break;
      }

      // optional double cartPos_Kp_x = 149;
      case 149: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartPos_Kp_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartpos_kp_x_)));
          set_has_cartpos_kp_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1201)) goto parse_cartPos_Kp_y;
        break;
      }

      // optional double cartPos_Kp_y = 150;
      case 150: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartPos_Kp_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartpos_kp_y_)));
          set_has_cartpos_kp_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1209)) goto parse_cartPos_Kp_z;
        break;
      }

      // optional double cartPos_Kp_z = 151;
      case 151: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartPos_Kp_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartpos_kp_z_)));
          set_has_cartpos_kp_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1217)) goto parse_cartPos_Kd_x;
        break;
      }

      // optional double cartPos_Kd_x = 152;
      case 152: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartPos_Kd_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartpos_kd_x_)));
          set_has_cartpos_kd_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1225)) goto parse_cartPos_Kd_y;
        break;
      }

      // optional double cartPos_Kd_y = 153;
      case 153: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartPos_Kd_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartpos_kd_y_)));
          set_has_cartpos_kd_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1233)) goto parse_cartPos_Kd_z;
        break;
      }

      // optional double cartPos_Kd_z = 154;
      case 154: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartPos_Kd_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartpos_kd_z_)));
          set_has_cartpos_kd_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1241)) goto parse_cartRot_Kp_x;
        break;
      }

      // optional double cartRot_Kp_x = 155;
      case 155: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartRot_Kp_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartrot_kp_x_)));
          set_has_cartrot_kp_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1249)) goto parse_cartRot_Kp_y;
        break;
      }

      // optional double cartRot_Kp_y = 156;
      case 156: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartRot_Kp_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartrot_kp_y_)));
          set_has_cartrot_kp_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1257)) goto parse_cartRot_Kp_z;
        break;
      }

      // optional double cartRot_Kp_z = 157;
      case 157: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartRot_Kp_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartrot_kp_z_)));
          set_has_cartrot_kp_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1265)) goto parse_cartRot_Kd_x;
        break;
      }

      // optional double cartRot_Kd_x = 158;
      case 158: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartRot_Kd_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartrot_kd_x_)));
          set_has_cartrot_kd_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1273)) goto parse_cartRot_Kd_y;
        break;
      }

      // optional double cartRot_Kd_y = 159;
      case 159: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartRot_Kd_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartrot_kd_y_)));
          set_has_cartrot_kd_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1281)) goto parse_cartRot_Kd_z;
        break;
      }

      // optional double cartRot_Kd_z = 160;
      case 160: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartRot_Kd_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartrot_kd_z_)));
          set_has_cartrot_kd_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1288)) goto parse_useCurrentCartPose;
        break;
      }

      // optional bool useCurrentCartPose = 161;
      case 161: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_useCurrentCartPose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &usecurrentcartpose_)));
          set_has_usecurrentcartpose();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1296)) goto parse_useNullspacePose;
        break;
      }

      // optional bool useNullspacePose = 162;
      case 162: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_useNullspacePose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &usenullspacepose_)));
          set_has_usenullspacepose();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1305)) goto parse_cartIniX;
        break;
      }

      // optional double cartIniX = 163;
      case 163: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartIniX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartinix_)));
          set_has_cartinix();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1313)) goto parse_cartIniY;
        break;
      }

      // optional double cartIniY = 164;
      case 164: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartIniY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartiniy_)));
          set_has_cartiniy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1321)) goto parse_cartIniZ;
        break;
      }

      // optional double cartIniZ = 165;
      case 165: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartIniZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartiniz_)));
          set_has_cartiniz();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1329)) goto parse_cartIniRoll;
        break;
      }

      // optional double cartIniRoll = 166;
      case 166: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartIniRoll:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartiniroll_)));
          set_has_cartiniroll();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1337)) goto parse_cartIniPitch;
        break;
      }

      // optional double cartIniPitch = 167;
      case 167: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartIniPitch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartinipitch_)));
          set_has_cartinipitch();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1345)) goto parse_cartIniYaw;
        break;
      }

      // optional double cartIniYaw = 168;
      case 168: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartIniYaw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartiniyaw_)));
          set_has_cartiniyaw();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1353)) goto parse_cartDesX;
        break;
      }

      // optional double cartDesX = 169;
      case 169: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartDesX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartdesx_)));
          set_has_cartdesx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1361)) goto parse_cartDesY;
        break;
      }

      // optional double cartDesY = 170;
      case 170: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartDesY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartdesy_)));
          set_has_cartdesy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1369)) goto parse_cartDesZ;
        break;
      }

      // optional double cartDesZ = 171;
      case 171: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartDesZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartdesz_)));
          set_has_cartdesz();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1377)) goto parse_cartDesRoll;
        break;
      }

      // optional double cartDesRoll = 172;
      case 172: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartDesRoll:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartdesroll_)));
          set_has_cartdesroll();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1385)) goto parse_cartDesPitch;
        break;
      }

      // optional double cartDesPitch = 173;
      case 173: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartDesPitch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartdespitch_)));
          set_has_cartdespitch();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1393)) goto parse_cartDesYaw;
        break;
      }

      // optional double cartDesYaw = 174;
      case 174: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_cartDesYaw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cartdesyaw_)));
          set_has_cartdesyaw();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1401)) goto parse_m;
        break;
      }

      // optional double m = 175;
      case 175: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_m:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &m_)));
          set_has_m();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1409)) goto parse_d;
        break;
      }

      // optional double d = 176;
      case 176: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_d:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &d_)));
          set_has_d();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1417)) goto parse_k;
        break;
      }

      // optional double k = 177;
      case 177: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_k:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &k_)));
          set_has_k();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1425)) goto parse_task_mA;
        break;
      }

      // optional double task_mA = 178;
      case 178: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_task_mA:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &task_ma_)));
          set_has_task_ma();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1433)) goto parse_task_mB;
        break;
      }

      // optional double task_mB = 179;
      case 179: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_task_mB:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &task_mb_)));
          set_has_task_mb();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1441)) goto parse_fixedFilterWeights;
        break;
      }

      // optional double fixedFilterWeights = 180;
      case 180: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_fixedFilterWeights:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fixedfilterweights_)));
          set_has_fixedfilterweights();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1457)) goto parse_w0;
        break;
      }

      // optional double w0 = 182;
      case 182: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_w0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w0_)));
          set_has_w0();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1465)) goto parse_w1;
        break;
      }

      // optional double w1 = 183;
      case 183: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_w1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w1_)));
          set_has_w1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1473)) goto parse_w2;
        break;
      }

      // optional double w2 = 184;
      case 184: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_w2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w2_)));
          set_has_w2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1481)) goto parse_w3;
        break;
      }

      // optional double w3 = 185;
      case 185: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_w3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w3_)));
          set_has_w3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1489)) goto parse_w4;
        break;
      }

      // optional double w4 = 186;
      case 186: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_w4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w4_)));
          set_has_w4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1497)) goto parse_w5;
        break;
      }

      // optional double w5 = 187;
      case 187: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_w5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w5_)));
          set_has_w5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1505)) goto parse_w6;
        break;
      }

      // optional double w6 = 188;
      case 188: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_w6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w6_)));
          set_has_w6();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(1513)) goto parse_w7;
        break;
      }

      // optional double w7 = 189;
      case 189: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_w7:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w7_)));
          set_has_w7();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Datum::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional double dt = 1;
  if (has_dt()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->dt(), output);
  }

  // optional double force_x = 2;
  if (has_force_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->force_x(), output);
  }

  // optional double force_y = 3;
  if (has_force_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->force_y(), output);
  }

  // optional double force_z = 4;
  if (has_force_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->force_z(), output);
  }

  // optional double torque_x = 5;
  if (has_torque_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->torque_x(), output);
  }

  // optional double torque_y = 6;
  if (has_torque_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->torque_y(), output);
  }

  // optional double torque_z = 7;
  if (has_torque_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->torque_z(), output);
  }

  // optional double acc_x = 8;
  if (has_acc_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->acc_x(), output);
  }

  // optional double acc_y = 9;
  if (has_acc_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->acc_y(), output);
  }

  // optional double acc_z = 10;
  if (has_acc_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->acc_z(), output);
  }

  // optional double r_eff_x = 11;
  if (has_r_eff_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->r_eff_x(), output);
  }

  // optional double r_eff_y = 12;
  if (has_r_eff_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->r_eff_y(), output);
  }

  // optional double r_eff_z = 13;
  if (has_r_eff_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->r_eff_z(), output);
  }

  // optional double r_trq_x = 14;
  if (has_r_trq_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->r_trq_x(), output);
  }

  // optional double r_trq_y = 15;
  if (has_r_trq_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->r_trq_y(), output);
  }

  // optional double r_trq_z = 16;
  if (has_r_trq_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->r_trq_z(), output);
  }

  // optional double reference_eff_j0 = 17;
  if (has_reference_eff_j0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->reference_eff_j0(), output);
  }

  // optional double reference_eff_j1 = 18;
  if (has_reference_eff_j1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->reference_eff_j1(), output);
  }

  // optional double reference_eff_j2 = 19;
  if (has_reference_eff_j2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->reference_eff_j2(), output);
  }

  // optional double reference_eff_j3 = 20;
  if (has_reference_eff_j3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->reference_eff_j3(), output);
  }

  // optional double reference_eff_j4 = 21;
  if (has_reference_eff_j4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->reference_eff_j4(), output);
  }

  // optional double reference_eff_j5 = 22;
  if (has_reference_eff_j5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->reference_eff_j5(), output);
  }

  // optional double reference_eff_j6 = 23;
  if (has_reference_eff_j6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->reference_eff_j6(), output);
  }

  // optional double taskRef_x = 24;
  if (has_taskref_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->taskref_x(), output);
  }

  // optional double taskRef_y = 25;
  if (has_taskref_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(25, this->taskref_y(), output);
  }

  // optional double taskRef_z = 26;
  if (has_taskref_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(26, this->taskref_z(), output);
  }

  // optional double taskRef_phi = 27;
  if (has_taskref_phi()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(27, this->taskref_phi(), output);
  }

  // optional double taskRef_theta = 28;
  if (has_taskref_theta()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(28, this->taskref_theta(), output);
  }

  // optional double taskRef_psi = 29;
  if (has_taskref_psi()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(29, this->taskref_psi(), output);
  }

  // optional double taskRefModel_x = 30;
  if (has_taskrefmodel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(30, this->taskrefmodel_x(), output);
  }

  // optional double taskRefModel_y = 31;
  if (has_taskrefmodel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(31, this->taskrefmodel_y(), output);
  }

  // optional double taskRefModel_z = 32;
  if (has_taskrefmodel_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(32, this->taskrefmodel_z(), output);
  }

  // optional double taskRefModel_phi = 33;
  if (has_taskrefmodel_phi()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(33, this->taskrefmodel_phi(), output);
  }

  // optional double taskRefModel_theta = 34;
  if (has_taskrefmodel_theta()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(34, this->taskrefmodel_theta(), output);
  }

  // optional double taskRefModel_psi = 35;
  if (has_taskrefmodel_psi()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(35, this->taskrefmodel_psi(), output);
  }

  // optional double m_cartPos_x = 36;
  if (has_m_cartpos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(36, this->m_cartpos_x(), output);
  }

  // optional double m_cartPos_y = 37;
  if (has_m_cartpos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(37, this->m_cartpos_y(), output);
  }

  // optional double m_cartPos_z = 38;
  if (has_m_cartpos_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(38, this->m_cartpos_z(), output);
  }

  // optional double m_cartPos_Qx = 39;
  if (has_m_cartpos_qx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(39, this->m_cartpos_qx(), output);
  }

  // optional double m_cartPos_Qy = 40;
  if (has_m_cartpos_qy()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(40, this->m_cartpos_qy(), output);
  }

  // optional double m_cartPos_Qz = 41;
  if (has_m_cartpos_qz()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(41, this->m_cartpos_qz(), output);
  }

  // optional double m_cartPos_QW = 42;
  if (has_m_cartpos_qw()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(42, this->m_cartpos_qw(), output);
  }

  // optional double m_pos_x = 43;
  if (has_m_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(43, this->m_pos_x(), output);
  }

  // optional double m_pos_y = 44;
  if (has_m_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(44, this->m_pos_y(), output);
  }

  // optional double m_pos_z = 45;
  if (has_m_pos_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(45, this->m_pos_z(), output);
  }

  // optional double m_vel_x = 46;
  if (has_m_vel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(46, this->m_vel_x(), output);
  }

  // optional double m_vel_y = 47;
  if (has_m_vel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(47, this->m_vel_y(), output);
  }

  // optional double m_vel_z = 48;
  if (has_m_vel_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(48, this->m_vel_z(), output);
  }

  // optional double m_acc_x = 49;
  if (has_m_acc_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(49, this->m_acc_x(), output);
  }

  // optional double m_acc_y = 50;
  if (has_m_acc_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(50, this->m_acc_y(), output);
  }

  // optional double m_acc_z = 51;
  if (has_m_acc_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(51, this->m_acc_z(), output);
  }

  // optional double m_pos_j0 = 52;
  if (has_m_pos_j0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(52, this->m_pos_j0(), output);
  }

  // optional double m_pos_j1 = 53;
  if (has_m_pos_j1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(53, this->m_pos_j1(), output);
  }

  // optional double m_pos_j2 = 54;
  if (has_m_pos_j2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(54, this->m_pos_j2(), output);
  }

  // optional double m_pos_j3 = 55;
  if (has_m_pos_j3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(55, this->m_pos_j3(), output);
  }

  // optional double m_pos_j4 = 56;
  if (has_m_pos_j4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(56, this->m_pos_j4(), output);
  }

  // optional double m_pos_j5 = 57;
  if (has_m_pos_j5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(57, this->m_pos_j5(), output);
  }

  // optional double m_pos_j6 = 58;
  if (has_m_pos_j6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(58, this->m_pos_j6(), output);
  }

  // optional double m_vel_j0 = 59;
  if (has_m_vel_j0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(59, this->m_vel_j0(), output);
  }

  // optional double m_vel_j1 = 60;
  if (has_m_vel_j1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(60, this->m_vel_j1(), output);
  }

  // optional double m_vel_j2 = 61;
  if (has_m_vel_j2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(61, this->m_vel_j2(), output);
  }

  // optional double m_vel_j3 = 62;
  if (has_m_vel_j3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(62, this->m_vel_j3(), output);
  }

  // optional double m_vel_j4 = 63;
  if (has_m_vel_j4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(63, this->m_vel_j4(), output);
  }

  // optional double m_vel_j5 = 64;
  if (has_m_vel_j5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(64, this->m_vel_j5(), output);
  }

  // optional double m_vel_j6 = 65;
  if (has_m_vel_j6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(65, this->m_vel_j6(), output);
  }

  // optional double m_acc_j0 = 66;
  if (has_m_acc_j0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(66, this->m_acc_j0(), output);
  }

  // optional double m_acc_j1 = 67;
  if (has_m_acc_j1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(67, this->m_acc_j1(), output);
  }

  // optional double m_acc_j2 = 68;
  if (has_m_acc_j2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(68, this->m_acc_j2(), output);
  }

  // optional double m_acc_j3 = 69;
  if (has_m_acc_j3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(69, this->m_acc_j3(), output);
  }

  // optional double m_acc_j4 = 70;
  if (has_m_acc_j4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(70, this->m_acc_j4(), output);
  }

  // optional double m_acc_j5 = 71;
  if (has_m_acc_j5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(71, this->m_acc_j5(), output);
  }

  // optional double m_acc_j6 = 72;
  if (has_m_acc_j6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(72, this->m_acc_j6(), output);
  }

  // optional double m_eff_j0 = 73;
  if (has_m_eff_j0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(73, this->m_eff_j0(), output);
  }

  // optional double m_eff_j1 = 74;
  if (has_m_eff_j1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(74, this->m_eff_j1(), output);
  }

  // optional double m_eff_j2 = 75;
  if (has_m_eff_j2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(75, this->m_eff_j2(), output);
  }

  // optional double m_eff_j3 = 76;
  if (has_m_eff_j3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(76, this->m_eff_j3(), output);
  }

  // optional double m_eff_j4 = 77;
  if (has_m_eff_j4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(77, this->m_eff_j4(), output);
  }

  // optional double m_eff_j5 = 78;
  if (has_m_eff_j5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(78, this->m_eff_j5(), output);
  }

  // optional double m_eff_j6 = 79;
  if (has_m_eff_j6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(79, this->m_eff_j6(), output);
  }

  // optional double control_eff_j0 = 80;
  if (has_control_eff_j0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(80, this->control_eff_j0(), output);
  }

  // optional double control_eff_j1 = 81;
  if (has_control_eff_j1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(81, this->control_eff_j1(), output);
  }

  // optional double control_eff_j2 = 82;
  if (has_control_eff_j2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(82, this->control_eff_j2(), output);
  }

  // optional double control_eff_j3 = 83;
  if (has_control_eff_j3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(83, this->control_eff_j3(), output);
  }

  // optional double control_eff_j4 = 84;
  if (has_control_eff_j4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(84, this->control_eff_j4(), output);
  }

  // optional double control_eff_j5 = 85;
  if (has_control_eff_j5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(85, this->control_eff_j5(), output);
  }

  // optional double control_eff_j6 = 86;
  if (has_control_eff_j6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(86, this->control_eff_j6(), output);
  }

  // optional double r_cartPos_x = 87;
  if (has_r_cartpos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(87, this->r_cartpos_x(), output);
  }

  // optional double r_cartPos_y = 88;
  if (has_r_cartpos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(88, this->r_cartpos_y(), output);
  }

  // optional double r_cartPos_z = 89;
  if (has_r_cartpos_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(89, this->r_cartpos_z(), output);
  }

  // optional double r_cartPos_Qx = 90;
  if (has_r_cartpos_qx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(90, this->r_cartpos_qx(), output);
  }

  // optional double r_cartPos_Qy = 91;
  if (has_r_cartpos_qy()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(91, this->r_cartpos_qy(), output);
  }

  // optional double r_cartPos_Qz = 92;
  if (has_r_cartpos_qz()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(92, this->r_cartpos_qz(), output);
  }

  // optional double r_cartPos_QW = 93;
  if (has_r_cartpos_qw()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(93, this->r_cartpos_qw(), output);
  }

  // optional double r_pos_j0 = 94;
  if (has_r_pos_j0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(94, this->r_pos_j0(), output);
  }

  // optional double r_pos_j1 = 95;
  if (has_r_pos_j1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(95, this->r_pos_j1(), output);
  }

  // optional double r_pos_j2 = 96;
  if (has_r_pos_j2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(96, this->r_pos_j2(), output);
  }

  // optional double r_pos_j3 = 97;
  if (has_r_pos_j3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(97, this->r_pos_j3(), output);
  }

  // optional double r_pos_j4 = 98;
  if (has_r_pos_j4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(98, this->r_pos_j4(), output);
  }

  // optional double r_pos_j5 = 99;
  if (has_r_pos_j5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(99, this->r_pos_j5(), output);
  }

  // optional double r_pos_j6 = 100;
  if (has_r_pos_j6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(100, this->r_pos_j6(), output);
  }

  // optional double r_vel_j0 = 101;
  if (has_r_vel_j0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(101, this->r_vel_j0(), output);
  }

  // optional double r_vel_j1 = 102;
  if (has_r_vel_j1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(102, this->r_vel_j1(), output);
  }

  // optional double r_vel_j2 = 103;
  if (has_r_vel_j2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(103, this->r_vel_j2(), output);
  }

  // optional double r_vel_j3 = 104;
  if (has_r_vel_j3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(104, this->r_vel_j3(), output);
  }

  // optional double r_vel_j4 = 105;
  if (has_r_vel_j4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(105, this->r_vel_j4(), output);
  }

  // optional double r_vel_j5 = 106;
  if (has_r_vel_j5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(106, this->r_vel_j5(), output);
  }

  // optional double r_vel_j6 = 107;
  if (has_r_vel_j6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(107, this->r_vel_j6(), output);
  }

  // optional double r_acc_j0 = 108;
  if (has_r_acc_j0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(108, this->r_acc_j0(), output);
  }

  // optional double r_acc_j1 = 109;
  if (has_r_acc_j1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(109, this->r_acc_j1(), output);
  }

  // optional double r_acc_j2 = 110;
  if (has_r_acc_j2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(110, this->r_acc_j2(), output);
  }

  // optional double r_acc_j3 = 111;
  if (has_r_acc_j3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(111, this->r_acc_j3(), output);
  }

  // optional double r_acc_j4 = 112;
  if (has_r_acc_j4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(112, this->r_acc_j4(), output);
  }

  // optional double r_acc_j5 = 113;
  if (has_r_acc_j5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(113, this->r_acc_j5(), output);
  }

  // optional double r_acc_j6 = 114;
  if (has_r_acc_j6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(114, this->r_acc_j6(), output);
  }

  // optional double r_eff_j0 = 115;
  if (has_r_eff_j0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(115, this->r_eff_j0(), output);
  }

  // optional double r_eff_j1 = 116;
  if (has_r_eff_j1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(116, this->r_eff_j1(), output);
  }

  // optional double r_eff_j2 = 117;
  if (has_r_eff_j2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(117, this->r_eff_j2(), output);
  }

  // optional double r_eff_j3 = 118;
  if (has_r_eff_j3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(118, this->r_eff_j3(), output);
  }

  // optional double r_eff_j4 = 119;
  if (has_r_eff_j4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(119, this->r_eff_j4(), output);
  }

  // optional double r_eff_j5 = 120;
  if (has_r_eff_j5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(120, this->r_eff_j5(), output);
  }

  // optional double r_eff_j6 = 121;
  if (has_r_eff_j6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(121, this->r_eff_j6(), output);
  }

  // optional double l_limit_0 = 122;
  if (has_l_limit_0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(122, this->l_limit_0(), output);
  }

  // optional double l_limit_1 = 123;
  if (has_l_limit_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(123, this->l_limit_1(), output);
  }

  // optional double l_limit_2 = 124;
  if (has_l_limit_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(124, this->l_limit_2(), output);
  }

  // optional double l_limit_3 = 125;
  if (has_l_limit_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(125, this->l_limit_3(), output);
  }

  // optional double l_limit_4 = 126;
  if (has_l_limit_4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(126, this->l_limit_4(), output);
  }

  // optional double l_limit_5 = 127;
  if (has_l_limit_5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(127, this->l_limit_5(), output);
  }

  // optional double l_limit_6 = 128;
  if (has_l_limit_6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(128, this->l_limit_6(), output);
  }

  // optional double u_limit_0 = 129;
  if (has_u_limit_0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(129, this->u_limit_0(), output);
  }

  // optional double u_limit_1 = 130;
  if (has_u_limit_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(130, this->u_limit_1(), output);
  }

  // optional double u_limit_2 = 131;
  if (has_u_limit_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(131, this->u_limit_2(), output);
  }

  // optional double u_limit_3 = 132;
  if (has_u_limit_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(132, this->u_limit_3(), output);
  }

  // optional double u_limit_4 = 133;
  if (has_u_limit_4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(133, this->u_limit_4(), output);
  }

  // optional double u_limit_5 = 134;
  if (has_u_limit_5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(134, this->u_limit_5(), output);
  }

  // optional double u_limit_6 = 135;
  if (has_u_limit_6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(135, this->u_limit_6(), output);
  }

  // optional double kappa = 136;
  if (has_kappa()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(136, this->kappa(), output);
  }

  // optional double Kv = 137;
  if (has_kv()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(137, this->kv(), output);
  }

  // optional double lambda = 138;
  if (has_lambda()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(138, this->lambda(), output);
  }

  // optional double Kz = 139;
  if (has_kz()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(139, this->kz(), output);
  }

  // optional double Zb = 140;
  if (has_zb()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(140, this->zb(), output);
  }

  // optional double F = 141;
  if (has_f()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(141, this->f(), output);
  }

  // optional double G = 142;
  if (has_g()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(142, this->g(), output);
  }

  // optional int64 inParams = 143;
  if (has_inparams()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(143, this->inparams(), output);
  }

  // optional int64 outParams = 144;
  if (has_outparams()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(144, this->outparams(), output);
  }

  // optional int64 hiddenNodes = 145;
  if (has_hiddennodes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(145, this->hiddennodes(), output);
  }

  // optional int64 errorParams = 146;
  if (has_errorparams()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(146, this->errorparams(), output);
  }

  // optional double feedForwardForce = 147;
  if (has_feedforwardforce()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(147, this->feedforwardforce(), output);
  }

  // optional double nn_ON = 148;
  if (has_nn_on()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(148, this->nn_on(), output);
  }

  // optional double cartPos_Kp_x = 149;
  if (has_cartpos_kp_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(149, this->cartpos_kp_x(), output);
  }

  // optional double cartPos_Kp_y = 150;
  if (has_cartpos_kp_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(150, this->cartpos_kp_y(), output);
  }

  // optional double cartPos_Kp_z = 151;
  if (has_cartpos_kp_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(151, this->cartpos_kp_z(), output);
  }

  // optional double cartPos_Kd_x = 152;
  if (has_cartpos_kd_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(152, this->cartpos_kd_x(), output);
  }

  // optional double cartPos_Kd_y = 153;
  if (has_cartpos_kd_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(153, this->cartpos_kd_y(), output);
  }

  // optional double cartPos_Kd_z = 154;
  if (has_cartpos_kd_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(154, this->cartpos_kd_z(), output);
  }

  // optional double cartRot_Kp_x = 155;
  if (has_cartrot_kp_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(155, this->cartrot_kp_x(), output);
  }

  // optional double cartRot_Kp_y = 156;
  if (has_cartrot_kp_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(156, this->cartrot_kp_y(), output);
  }

  // optional double cartRot_Kp_z = 157;
  if (has_cartrot_kp_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(157, this->cartrot_kp_z(), output);
  }

  // optional double cartRot_Kd_x = 158;
  if (has_cartrot_kd_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(158, this->cartrot_kd_x(), output);
  }

  // optional double cartRot_Kd_y = 159;
  if (has_cartrot_kd_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(159, this->cartrot_kd_y(), output);
  }

  // optional double cartRot_Kd_z = 160;
  if (has_cartrot_kd_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(160, this->cartrot_kd_z(), output);
  }

  // optional bool useCurrentCartPose = 161;
  if (has_usecurrentcartpose()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(161, this->usecurrentcartpose(), output);
  }

  // optional bool useNullspacePose = 162;
  if (has_usenullspacepose()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(162, this->usenullspacepose(), output);
  }

  // optional double cartIniX = 163;
  if (has_cartinix()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(163, this->cartinix(), output);
  }

  // optional double cartIniY = 164;
  if (has_cartiniy()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(164, this->cartiniy(), output);
  }

  // optional double cartIniZ = 165;
  if (has_cartiniz()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(165, this->cartiniz(), output);
  }

  // optional double cartIniRoll = 166;
  if (has_cartiniroll()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(166, this->cartiniroll(), output);
  }

  // optional double cartIniPitch = 167;
  if (has_cartinipitch()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(167, this->cartinipitch(), output);
  }

  // optional double cartIniYaw = 168;
  if (has_cartiniyaw()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(168, this->cartiniyaw(), output);
  }

  // optional double cartDesX = 169;
  if (has_cartdesx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(169, this->cartdesx(), output);
  }

  // optional double cartDesY = 170;
  if (has_cartdesy()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(170, this->cartdesy(), output);
  }

  // optional double cartDesZ = 171;
  if (has_cartdesz()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(171, this->cartdesz(), output);
  }

  // optional double cartDesRoll = 172;
  if (has_cartdesroll()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(172, this->cartdesroll(), output);
  }

  // optional double cartDesPitch = 173;
  if (has_cartdespitch()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(173, this->cartdespitch(), output);
  }

  // optional double cartDesYaw = 174;
  if (has_cartdesyaw()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(174, this->cartdesyaw(), output);
  }

  // optional double m = 175;
  if (has_m()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(175, this->m(), output);
  }

  // optional double d = 176;
  if (has_d()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(176, this->d(), output);
  }

  // optional double k = 177;
  if (has_k()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(177, this->k(), output);
  }

  // optional double task_mA = 178;
  if (has_task_ma()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(178, this->task_ma(), output);
  }

  // optional double task_mB = 179;
  if (has_task_mb()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(179, this->task_mb(), output);
  }

  // optional double fixedFilterWeights = 180;
  if (has_fixedfilterweights()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(180, this->fixedfilterweights(), output);
  }

  // optional double w0 = 182;
  if (has_w0()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(182, this->w0(), output);
  }

  // optional double w1 = 183;
  if (has_w1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(183, this->w1(), output);
  }

  // optional double w2 = 184;
  if (has_w2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(184, this->w2(), output);
  }

  // optional double w3 = 185;
  if (has_w3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(185, this->w3(), output);
  }

  // optional double w4 = 186;
  if (has_w4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(186, this->w4(), output);
  }

  // optional double w5 = 187;
  if (has_w5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(187, this->w5(), output);
  }

  // optional double w6 = 188;
  if (has_w6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(188, this->w6(), output);
  }

  // optional double w7 = 189;
  if (has_w7()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(189, this->w7(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Datum::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional double dt = 1;
  if (has_dt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->dt(), target);
  }

  // optional double force_x = 2;
  if (has_force_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->force_x(), target);
  }

  // optional double force_y = 3;
  if (has_force_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->force_y(), target);
  }

  // optional double force_z = 4;
  if (has_force_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->force_z(), target);
  }

  // optional double torque_x = 5;
  if (has_torque_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->torque_x(), target);
  }

  // optional double torque_y = 6;
  if (has_torque_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->torque_y(), target);
  }

  // optional double torque_z = 7;
  if (has_torque_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->torque_z(), target);
  }

  // optional double acc_x = 8;
  if (has_acc_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->acc_x(), target);
  }

  // optional double acc_y = 9;
  if (has_acc_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->acc_y(), target);
  }

  // optional double acc_z = 10;
  if (has_acc_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->acc_z(), target);
  }

  // optional double r_eff_x = 11;
  if (has_r_eff_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->r_eff_x(), target);
  }

  // optional double r_eff_y = 12;
  if (has_r_eff_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->r_eff_y(), target);
  }

  // optional double r_eff_z = 13;
  if (has_r_eff_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->r_eff_z(), target);
  }

  // optional double r_trq_x = 14;
  if (has_r_trq_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->r_trq_x(), target);
  }

  // optional double r_trq_y = 15;
  if (has_r_trq_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->r_trq_y(), target);
  }

  // optional double r_trq_z = 16;
  if (has_r_trq_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->r_trq_z(), target);
  }

  // optional double reference_eff_j0 = 17;
  if (has_reference_eff_j0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->reference_eff_j0(), target);
  }

  // optional double reference_eff_j1 = 18;
  if (has_reference_eff_j1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->reference_eff_j1(), target);
  }

  // optional double reference_eff_j2 = 19;
  if (has_reference_eff_j2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->reference_eff_j2(), target);
  }

  // optional double reference_eff_j3 = 20;
  if (has_reference_eff_j3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->reference_eff_j3(), target);
  }

  // optional double reference_eff_j4 = 21;
  if (has_reference_eff_j4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->reference_eff_j4(), target);
  }

  // optional double reference_eff_j5 = 22;
  if (has_reference_eff_j5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->reference_eff_j5(), target);
  }

  // optional double reference_eff_j6 = 23;
  if (has_reference_eff_j6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->reference_eff_j6(), target);
  }

  // optional double taskRef_x = 24;
  if (has_taskref_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->taskref_x(), target);
  }

  // optional double taskRef_y = 25;
  if (has_taskref_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(25, this->taskref_y(), target);
  }

  // optional double taskRef_z = 26;
  if (has_taskref_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(26, this->taskref_z(), target);
  }

  // optional double taskRef_phi = 27;
  if (has_taskref_phi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(27, this->taskref_phi(), target);
  }

  // optional double taskRef_theta = 28;
  if (has_taskref_theta()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(28, this->taskref_theta(), target);
  }

  // optional double taskRef_psi = 29;
  if (has_taskref_psi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(29, this->taskref_psi(), target);
  }

  // optional double taskRefModel_x = 30;
  if (has_taskrefmodel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(30, this->taskrefmodel_x(), target);
  }

  // optional double taskRefModel_y = 31;
  if (has_taskrefmodel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(31, this->taskrefmodel_y(), target);
  }

  // optional double taskRefModel_z = 32;
  if (has_taskrefmodel_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(32, this->taskrefmodel_z(), target);
  }

  // optional double taskRefModel_phi = 33;
  if (has_taskrefmodel_phi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(33, this->taskrefmodel_phi(), target);
  }

  // optional double taskRefModel_theta = 34;
  if (has_taskrefmodel_theta()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(34, this->taskrefmodel_theta(), target);
  }

  // optional double taskRefModel_psi = 35;
  if (has_taskrefmodel_psi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(35, this->taskrefmodel_psi(), target);
  }

  // optional double m_cartPos_x = 36;
  if (has_m_cartpos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(36, this->m_cartpos_x(), target);
  }

  // optional double m_cartPos_y = 37;
  if (has_m_cartpos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(37, this->m_cartpos_y(), target);
  }

  // optional double m_cartPos_z = 38;
  if (has_m_cartpos_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(38, this->m_cartpos_z(), target);
  }

  // optional double m_cartPos_Qx = 39;
  if (has_m_cartpos_qx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(39, this->m_cartpos_qx(), target);
  }

  // optional double m_cartPos_Qy = 40;
  if (has_m_cartpos_qy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(40, this->m_cartpos_qy(), target);
  }

  // optional double m_cartPos_Qz = 41;
  if (has_m_cartpos_qz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(41, this->m_cartpos_qz(), target);
  }

  // optional double m_cartPos_QW = 42;
  if (has_m_cartpos_qw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(42, this->m_cartpos_qw(), target);
  }

  // optional double m_pos_x = 43;
  if (has_m_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(43, this->m_pos_x(), target);
  }

  // optional double m_pos_y = 44;
  if (has_m_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(44, this->m_pos_y(), target);
  }

  // optional double m_pos_z = 45;
  if (has_m_pos_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(45, this->m_pos_z(), target);
  }

  // optional double m_vel_x = 46;
  if (has_m_vel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(46, this->m_vel_x(), target);
  }

  // optional double m_vel_y = 47;
  if (has_m_vel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(47, this->m_vel_y(), target);
  }

  // optional double m_vel_z = 48;
  if (has_m_vel_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(48, this->m_vel_z(), target);
  }

  // optional double m_acc_x = 49;
  if (has_m_acc_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(49, this->m_acc_x(), target);
  }

  // optional double m_acc_y = 50;
  if (has_m_acc_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(50, this->m_acc_y(), target);
  }

  // optional double m_acc_z = 51;
  if (has_m_acc_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(51, this->m_acc_z(), target);
  }

  // optional double m_pos_j0 = 52;
  if (has_m_pos_j0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(52, this->m_pos_j0(), target);
  }

  // optional double m_pos_j1 = 53;
  if (has_m_pos_j1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(53, this->m_pos_j1(), target);
  }

  // optional double m_pos_j2 = 54;
  if (has_m_pos_j2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(54, this->m_pos_j2(), target);
  }

  // optional double m_pos_j3 = 55;
  if (has_m_pos_j3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(55, this->m_pos_j3(), target);
  }

  // optional double m_pos_j4 = 56;
  if (has_m_pos_j4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(56, this->m_pos_j4(), target);
  }

  // optional double m_pos_j5 = 57;
  if (has_m_pos_j5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(57, this->m_pos_j5(), target);
  }

  // optional double m_pos_j6 = 58;
  if (has_m_pos_j6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(58, this->m_pos_j6(), target);
  }

  // optional double m_vel_j0 = 59;
  if (has_m_vel_j0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(59, this->m_vel_j0(), target);
  }

  // optional double m_vel_j1 = 60;
  if (has_m_vel_j1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(60, this->m_vel_j1(), target);
  }

  // optional double m_vel_j2 = 61;
  if (has_m_vel_j2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(61, this->m_vel_j2(), target);
  }

  // optional double m_vel_j3 = 62;
  if (has_m_vel_j3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(62, this->m_vel_j3(), target);
  }

  // optional double m_vel_j4 = 63;
  if (has_m_vel_j4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(63, this->m_vel_j4(), target);
  }

  // optional double m_vel_j5 = 64;
  if (has_m_vel_j5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(64, this->m_vel_j5(), target);
  }

  // optional double m_vel_j6 = 65;
  if (has_m_vel_j6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(65, this->m_vel_j6(), target);
  }

  // optional double m_acc_j0 = 66;
  if (has_m_acc_j0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(66, this->m_acc_j0(), target);
  }

  // optional double m_acc_j1 = 67;
  if (has_m_acc_j1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(67, this->m_acc_j1(), target);
  }

  // optional double m_acc_j2 = 68;
  if (has_m_acc_j2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(68, this->m_acc_j2(), target);
  }

  // optional double m_acc_j3 = 69;
  if (has_m_acc_j3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(69, this->m_acc_j3(), target);
  }

  // optional double m_acc_j4 = 70;
  if (has_m_acc_j4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(70, this->m_acc_j4(), target);
  }

  // optional double m_acc_j5 = 71;
  if (has_m_acc_j5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(71, this->m_acc_j5(), target);
  }

  // optional double m_acc_j6 = 72;
  if (has_m_acc_j6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(72, this->m_acc_j6(), target);
  }

  // optional double m_eff_j0 = 73;
  if (has_m_eff_j0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(73, this->m_eff_j0(), target);
  }

  // optional double m_eff_j1 = 74;
  if (has_m_eff_j1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(74, this->m_eff_j1(), target);
  }

  // optional double m_eff_j2 = 75;
  if (has_m_eff_j2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(75, this->m_eff_j2(), target);
  }

  // optional double m_eff_j3 = 76;
  if (has_m_eff_j3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(76, this->m_eff_j3(), target);
  }

  // optional double m_eff_j4 = 77;
  if (has_m_eff_j4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(77, this->m_eff_j4(), target);
  }

  // optional double m_eff_j5 = 78;
  if (has_m_eff_j5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(78, this->m_eff_j5(), target);
  }

  // optional double m_eff_j6 = 79;
  if (has_m_eff_j6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(79, this->m_eff_j6(), target);
  }

  // optional double control_eff_j0 = 80;
  if (has_control_eff_j0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(80, this->control_eff_j0(), target);
  }

  // optional double control_eff_j1 = 81;
  if (has_control_eff_j1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(81, this->control_eff_j1(), target);
  }

  // optional double control_eff_j2 = 82;
  if (has_control_eff_j2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(82, this->control_eff_j2(), target);
  }

  // optional double control_eff_j3 = 83;
  if (has_control_eff_j3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(83, this->control_eff_j3(), target);
  }

  // optional double control_eff_j4 = 84;
  if (has_control_eff_j4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(84, this->control_eff_j4(), target);
  }

  // optional double control_eff_j5 = 85;
  if (has_control_eff_j5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(85, this->control_eff_j5(), target);
  }

  // optional double control_eff_j6 = 86;
  if (has_control_eff_j6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(86, this->control_eff_j6(), target);
  }

  // optional double r_cartPos_x = 87;
  if (has_r_cartpos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(87, this->r_cartpos_x(), target);
  }

  // optional double r_cartPos_y = 88;
  if (has_r_cartpos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(88, this->r_cartpos_y(), target);
  }

  // optional double r_cartPos_z = 89;
  if (has_r_cartpos_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(89, this->r_cartpos_z(), target);
  }

  // optional double r_cartPos_Qx = 90;
  if (has_r_cartpos_qx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(90, this->r_cartpos_qx(), target);
  }

  // optional double r_cartPos_Qy = 91;
  if (has_r_cartpos_qy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(91, this->r_cartpos_qy(), target);
  }

  // optional double r_cartPos_Qz = 92;
  if (has_r_cartpos_qz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(92, this->r_cartpos_qz(), target);
  }

  // optional double r_cartPos_QW = 93;
  if (has_r_cartpos_qw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(93, this->r_cartpos_qw(), target);
  }

  // optional double r_pos_j0 = 94;
  if (has_r_pos_j0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(94, this->r_pos_j0(), target);
  }

  // optional double r_pos_j1 = 95;
  if (has_r_pos_j1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(95, this->r_pos_j1(), target);
  }

  // optional double r_pos_j2 = 96;
  if (has_r_pos_j2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(96, this->r_pos_j2(), target);
  }

  // optional double r_pos_j3 = 97;
  if (has_r_pos_j3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(97, this->r_pos_j3(), target);
  }

  // optional double r_pos_j4 = 98;
  if (has_r_pos_j4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(98, this->r_pos_j4(), target);
  }

  // optional double r_pos_j5 = 99;
  if (has_r_pos_j5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(99, this->r_pos_j5(), target);
  }

  // optional double r_pos_j6 = 100;
  if (has_r_pos_j6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(100, this->r_pos_j6(), target);
  }

  // optional double r_vel_j0 = 101;
  if (has_r_vel_j0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(101, this->r_vel_j0(), target);
  }

  // optional double r_vel_j1 = 102;
  if (has_r_vel_j1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(102, this->r_vel_j1(), target);
  }

  // optional double r_vel_j2 = 103;
  if (has_r_vel_j2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(103, this->r_vel_j2(), target);
  }

  // optional double r_vel_j3 = 104;
  if (has_r_vel_j3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(104, this->r_vel_j3(), target);
  }

  // optional double r_vel_j4 = 105;
  if (has_r_vel_j4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(105, this->r_vel_j4(), target);
  }

  // optional double r_vel_j5 = 106;
  if (has_r_vel_j5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(106, this->r_vel_j5(), target);
  }

  // optional double r_vel_j6 = 107;
  if (has_r_vel_j6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(107, this->r_vel_j6(), target);
  }

  // optional double r_acc_j0 = 108;
  if (has_r_acc_j0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(108, this->r_acc_j0(), target);
  }

  // optional double r_acc_j1 = 109;
  if (has_r_acc_j1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(109, this->r_acc_j1(), target);
  }

  // optional double r_acc_j2 = 110;
  if (has_r_acc_j2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(110, this->r_acc_j2(), target);
  }

  // optional double r_acc_j3 = 111;
  if (has_r_acc_j3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(111, this->r_acc_j3(), target);
  }

  // optional double r_acc_j4 = 112;
  if (has_r_acc_j4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(112, this->r_acc_j4(), target);
  }

  // optional double r_acc_j5 = 113;
  if (has_r_acc_j5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(113, this->r_acc_j5(), target);
  }

  // optional double r_acc_j6 = 114;
  if (has_r_acc_j6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(114, this->r_acc_j6(), target);
  }

  // optional double r_eff_j0 = 115;
  if (has_r_eff_j0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(115, this->r_eff_j0(), target);
  }

  // optional double r_eff_j1 = 116;
  if (has_r_eff_j1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(116, this->r_eff_j1(), target);
  }

  // optional double r_eff_j2 = 117;
  if (has_r_eff_j2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(117, this->r_eff_j2(), target);
  }

  // optional double r_eff_j3 = 118;
  if (has_r_eff_j3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(118, this->r_eff_j3(), target);
  }

  // optional double r_eff_j4 = 119;
  if (has_r_eff_j4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(119, this->r_eff_j4(), target);
  }

  // optional double r_eff_j5 = 120;
  if (has_r_eff_j5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(120, this->r_eff_j5(), target);
  }

  // optional double r_eff_j6 = 121;
  if (has_r_eff_j6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(121, this->r_eff_j6(), target);
  }

  // optional double l_limit_0 = 122;
  if (has_l_limit_0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(122, this->l_limit_0(), target);
  }

  // optional double l_limit_1 = 123;
  if (has_l_limit_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(123, this->l_limit_1(), target);
  }

  // optional double l_limit_2 = 124;
  if (has_l_limit_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(124, this->l_limit_2(), target);
  }

  // optional double l_limit_3 = 125;
  if (has_l_limit_3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(125, this->l_limit_3(), target);
  }

  // optional double l_limit_4 = 126;
  if (has_l_limit_4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(126, this->l_limit_4(), target);
  }

  // optional double l_limit_5 = 127;
  if (has_l_limit_5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(127, this->l_limit_5(), target);
  }

  // optional double l_limit_6 = 128;
  if (has_l_limit_6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(128, this->l_limit_6(), target);
  }

  // optional double u_limit_0 = 129;
  if (has_u_limit_0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(129, this->u_limit_0(), target);
  }

  // optional double u_limit_1 = 130;
  if (has_u_limit_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(130, this->u_limit_1(), target);
  }

  // optional double u_limit_2 = 131;
  if (has_u_limit_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(131, this->u_limit_2(), target);
  }

  // optional double u_limit_3 = 132;
  if (has_u_limit_3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(132, this->u_limit_3(), target);
  }

  // optional double u_limit_4 = 133;
  if (has_u_limit_4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(133, this->u_limit_4(), target);
  }

  // optional double u_limit_5 = 134;
  if (has_u_limit_5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(134, this->u_limit_5(), target);
  }

  // optional double u_limit_6 = 135;
  if (has_u_limit_6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(135, this->u_limit_6(), target);
  }

  // optional double kappa = 136;
  if (has_kappa()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(136, this->kappa(), target);
  }

  // optional double Kv = 137;
  if (has_kv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(137, this->kv(), target);
  }

  // optional double lambda = 138;
  if (has_lambda()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(138, this->lambda(), target);
  }

  // optional double Kz = 139;
  if (has_kz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(139, this->kz(), target);
  }

  // optional double Zb = 140;
  if (has_zb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(140, this->zb(), target);
  }

  // optional double F = 141;
  if (has_f()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(141, this->f(), target);
  }

  // optional double G = 142;
  if (has_g()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(142, this->g(), target);
  }

  // optional int64 inParams = 143;
  if (has_inparams()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(143, this->inparams(), target);
  }

  // optional int64 outParams = 144;
  if (has_outparams()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(144, this->outparams(), target);
  }

  // optional int64 hiddenNodes = 145;
  if (has_hiddennodes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(145, this->hiddennodes(), target);
  }

  // optional int64 errorParams = 146;
  if (has_errorparams()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(146, this->errorparams(), target);
  }

  // optional double feedForwardForce = 147;
  if (has_feedforwardforce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(147, this->feedforwardforce(), target);
  }

  // optional double nn_ON = 148;
  if (has_nn_on()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(148, this->nn_on(), target);
  }

  // optional double cartPos_Kp_x = 149;
  if (has_cartpos_kp_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(149, this->cartpos_kp_x(), target);
  }

  // optional double cartPos_Kp_y = 150;
  if (has_cartpos_kp_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(150, this->cartpos_kp_y(), target);
  }

  // optional double cartPos_Kp_z = 151;
  if (has_cartpos_kp_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(151, this->cartpos_kp_z(), target);
  }

  // optional double cartPos_Kd_x = 152;
  if (has_cartpos_kd_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(152, this->cartpos_kd_x(), target);
  }

  // optional double cartPos_Kd_y = 153;
  if (has_cartpos_kd_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(153, this->cartpos_kd_y(), target);
  }

  // optional double cartPos_Kd_z = 154;
  if (has_cartpos_kd_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(154, this->cartpos_kd_z(), target);
  }

  // optional double cartRot_Kp_x = 155;
  if (has_cartrot_kp_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(155, this->cartrot_kp_x(), target);
  }

  // optional double cartRot_Kp_y = 156;
  if (has_cartrot_kp_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(156, this->cartrot_kp_y(), target);
  }

  // optional double cartRot_Kp_z = 157;
  if (has_cartrot_kp_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(157, this->cartrot_kp_z(), target);
  }

  // optional double cartRot_Kd_x = 158;
  if (has_cartrot_kd_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(158, this->cartrot_kd_x(), target);
  }

  // optional double cartRot_Kd_y = 159;
  if (has_cartrot_kd_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(159, this->cartrot_kd_y(), target);
  }

  // optional double cartRot_Kd_z = 160;
  if (has_cartrot_kd_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(160, this->cartrot_kd_z(), target);
  }

  // optional bool useCurrentCartPose = 161;
  if (has_usecurrentcartpose()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(161, this->usecurrentcartpose(), target);
  }

  // optional bool useNullspacePose = 162;
  if (has_usenullspacepose()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(162, this->usenullspacepose(), target);
  }

  // optional double cartIniX = 163;
  if (has_cartinix()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(163, this->cartinix(), target);
  }

  // optional double cartIniY = 164;
  if (has_cartiniy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(164, this->cartiniy(), target);
  }

  // optional double cartIniZ = 165;
  if (has_cartiniz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(165, this->cartiniz(), target);
  }

  // optional double cartIniRoll = 166;
  if (has_cartiniroll()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(166, this->cartiniroll(), target);
  }

  // optional double cartIniPitch = 167;
  if (has_cartinipitch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(167, this->cartinipitch(), target);
  }

  // optional double cartIniYaw = 168;
  if (has_cartiniyaw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(168, this->cartiniyaw(), target);
  }

  // optional double cartDesX = 169;
  if (has_cartdesx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(169, this->cartdesx(), target);
  }

  // optional double cartDesY = 170;
  if (has_cartdesy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(170, this->cartdesy(), target);
  }

  // optional double cartDesZ = 171;
  if (has_cartdesz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(171, this->cartdesz(), target);
  }

  // optional double cartDesRoll = 172;
  if (has_cartdesroll()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(172, this->cartdesroll(), target);
  }

  // optional double cartDesPitch = 173;
  if (has_cartdespitch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(173, this->cartdespitch(), target);
  }

  // optional double cartDesYaw = 174;
  if (has_cartdesyaw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(174, this->cartdesyaw(), target);
  }

  // optional double m = 175;
  if (has_m()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(175, this->m(), target);
  }

  // optional double d = 176;
  if (has_d()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(176, this->d(), target);
  }

  // optional double k = 177;
  if (has_k()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(177, this->k(), target);
  }

  // optional double task_mA = 178;
  if (has_task_ma()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(178, this->task_ma(), target);
  }

  // optional double task_mB = 179;
  if (has_task_mb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(179, this->task_mb(), target);
  }

  // optional double fixedFilterWeights = 180;
  if (has_fixedfilterweights()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(180, this->fixedfilterweights(), target);
  }

  // optional double w0 = 182;
  if (has_w0()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(182, this->w0(), target);
  }

  // optional double w1 = 183;
  if (has_w1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(183, this->w1(), target);
  }

  // optional double w2 = 184;
  if (has_w2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(184, this->w2(), target);
  }

  // optional double w3 = 185;
  if (has_w3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(185, this->w3(), target);
  }

  // optional double w4 = 186;
  if (has_w4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(186, this->w4(), target);
  }

  // optional double w5 = 187;
  if (has_w5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(187, this->w5(), target);
  }

  // optional double w6 = 188;
  if (has_w6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(188, this->w6(), target);
  }

  // optional double w7 = 189;
  if (has_w7()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(189, this->w7(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Datum::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional double dt = 1;
    if (has_dt()) {
      total_size += 1 + 8;
    }

    // optional double force_x = 2;
    if (has_force_x()) {
      total_size += 1 + 8;
    }

    // optional double force_y = 3;
    if (has_force_y()) {
      total_size += 1 + 8;
    }

    // optional double force_z = 4;
    if (has_force_z()) {
      total_size += 1 + 8;
    }

    // optional double torque_x = 5;
    if (has_torque_x()) {
      total_size += 1 + 8;
    }

    // optional double torque_y = 6;
    if (has_torque_y()) {
      total_size += 1 + 8;
    }

    // optional double torque_z = 7;
    if (has_torque_z()) {
      total_size += 1 + 8;
    }

    // optional double acc_x = 8;
    if (has_acc_x()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional double acc_y = 9;
    if (has_acc_y()) {
      total_size += 1 + 8;
    }

    // optional double acc_z = 10;
    if (has_acc_z()) {
      total_size += 1 + 8;
    }

    // optional double r_eff_x = 11;
    if (has_r_eff_x()) {
      total_size += 1 + 8;
    }

    // optional double r_eff_y = 12;
    if (has_r_eff_y()) {
      total_size += 1 + 8;
    }

    // optional double r_eff_z = 13;
    if (has_r_eff_z()) {
      total_size += 1 + 8;
    }

    // optional double r_trq_x = 14;
    if (has_r_trq_x()) {
      total_size += 1 + 8;
    }

    // optional double r_trq_y = 15;
    if (has_r_trq_y()) {
      total_size += 1 + 8;
    }

    // optional double r_trq_z = 16;
    if (has_r_trq_z()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional double reference_eff_j0 = 17;
    if (has_reference_eff_j0()) {
      total_size += 2 + 8;
    }

    // optional double reference_eff_j1 = 18;
    if (has_reference_eff_j1()) {
      total_size += 2 + 8;
    }

    // optional double reference_eff_j2 = 19;
    if (has_reference_eff_j2()) {
      total_size += 2 + 8;
    }

    // optional double reference_eff_j3 = 20;
    if (has_reference_eff_j3()) {
      total_size += 2 + 8;
    }

    // optional double reference_eff_j4 = 21;
    if (has_reference_eff_j4()) {
      total_size += 2 + 8;
    }

    // optional double reference_eff_j5 = 22;
    if (has_reference_eff_j5()) {
      total_size += 2 + 8;
    }

    // optional double reference_eff_j6 = 23;
    if (has_reference_eff_j6()) {
      total_size += 2 + 8;
    }

    // optional double taskRef_x = 24;
    if (has_taskref_x()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional double taskRef_y = 25;
    if (has_taskref_y()) {
      total_size += 2 + 8;
    }

    // optional double taskRef_z = 26;
    if (has_taskref_z()) {
      total_size += 2 + 8;
    }

    // optional double taskRef_phi = 27;
    if (has_taskref_phi()) {
      total_size += 2 + 8;
    }

    // optional double taskRef_theta = 28;
    if (has_taskref_theta()) {
      total_size += 2 + 8;
    }

    // optional double taskRef_psi = 29;
    if (has_taskref_psi()) {
      total_size += 2 + 8;
    }

    // optional double taskRefModel_x = 30;
    if (has_taskrefmodel_x()) {
      total_size += 2 + 8;
    }

    // optional double taskRefModel_y = 31;
    if (has_taskrefmodel_y()) {
      total_size += 2 + 8;
    }

    // optional double taskRefModel_z = 32;
    if (has_taskrefmodel_z()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional double taskRefModel_phi = 33;
    if (has_taskrefmodel_phi()) {
      total_size += 2 + 8;
    }

    // optional double taskRefModel_theta = 34;
    if (has_taskrefmodel_theta()) {
      total_size += 2 + 8;
    }

    // optional double taskRefModel_psi = 35;
    if (has_taskrefmodel_psi()) {
      total_size += 2 + 8;
    }

    // optional double m_cartPos_x = 36;
    if (has_m_cartpos_x()) {
      total_size += 2 + 8;
    }

    // optional double m_cartPos_y = 37;
    if (has_m_cartpos_y()) {
      total_size += 2 + 8;
    }

    // optional double m_cartPos_z = 38;
    if (has_m_cartpos_z()) {
      total_size += 2 + 8;
    }

    // optional double m_cartPos_Qx = 39;
    if (has_m_cartpos_qx()) {
      total_size += 2 + 8;
    }

    // optional double m_cartPos_Qy = 40;
    if (has_m_cartpos_qy()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // optional double m_cartPos_Qz = 41;
    if (has_m_cartpos_qz()) {
      total_size += 2 + 8;
    }

    // optional double m_cartPos_QW = 42;
    if (has_m_cartpos_qw()) {
      total_size += 2 + 8;
    }

    // optional double m_pos_x = 43;
    if (has_m_pos_x()) {
      total_size += 2 + 8;
    }

    // optional double m_pos_y = 44;
    if (has_m_pos_y()) {
      total_size += 2 + 8;
    }

    // optional double m_pos_z = 45;
    if (has_m_pos_z()) {
      total_size += 2 + 8;
    }

    // optional double m_vel_x = 46;
    if (has_m_vel_x()) {
      total_size += 2 + 8;
    }

    // optional double m_vel_y = 47;
    if (has_m_vel_y()) {
      total_size += 2 + 8;
    }

    // optional double m_vel_z = 48;
    if (has_m_vel_z()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    // optional double m_acc_x = 49;
    if (has_m_acc_x()) {
      total_size += 2 + 8;
    }

    // optional double m_acc_y = 50;
    if (has_m_acc_y()) {
      total_size += 2 + 8;
    }

    // optional double m_acc_z = 51;
    if (has_m_acc_z()) {
      total_size += 2 + 8;
    }

    // optional double m_pos_j0 = 52;
    if (has_m_pos_j0()) {
      total_size += 2 + 8;
    }

    // optional double m_pos_j1 = 53;
    if (has_m_pos_j1()) {
      total_size += 2 + 8;
    }

    // optional double m_pos_j2 = 54;
    if (has_m_pos_j2()) {
      total_size += 2 + 8;
    }

    // optional double m_pos_j3 = 55;
    if (has_m_pos_j3()) {
      total_size += 2 + 8;
    }

    // optional double m_pos_j4 = 56;
    if (has_m_pos_j4()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    // optional double m_pos_j5 = 57;
    if (has_m_pos_j5()) {
      total_size += 2 + 8;
    }

    // optional double m_pos_j6 = 58;
    if (has_m_pos_j6()) {
      total_size += 2 + 8;
    }

    // optional double m_vel_j0 = 59;
    if (has_m_vel_j0()) {
      total_size += 2 + 8;
    }

    // optional double m_vel_j1 = 60;
    if (has_m_vel_j1()) {
      total_size += 2 + 8;
    }

    // optional double m_vel_j2 = 61;
    if (has_m_vel_j2()) {
      total_size += 2 + 8;
    }

    // optional double m_vel_j3 = 62;
    if (has_m_vel_j3()) {
      total_size += 2 + 8;
    }

    // optional double m_vel_j4 = 63;
    if (has_m_vel_j4()) {
      total_size += 2 + 8;
    }

    // optional double m_vel_j5 = 64;
    if (has_m_vel_j5()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[64 / 32] & (0xffu << (64 % 32))) {
    // optional double m_vel_j6 = 65;
    if (has_m_vel_j6()) {
      total_size += 2 + 8;
    }

    // optional double m_acc_j0 = 66;
    if (has_m_acc_j0()) {
      total_size += 2 + 8;
    }

    // optional double m_acc_j1 = 67;
    if (has_m_acc_j1()) {
      total_size += 2 + 8;
    }

    // optional double m_acc_j2 = 68;
    if (has_m_acc_j2()) {
      total_size += 2 + 8;
    }

    // optional double m_acc_j3 = 69;
    if (has_m_acc_j3()) {
      total_size += 2 + 8;
    }

    // optional double m_acc_j4 = 70;
    if (has_m_acc_j4()) {
      total_size += 2 + 8;
    }

    // optional double m_acc_j5 = 71;
    if (has_m_acc_j5()) {
      total_size += 2 + 8;
    }

    // optional double m_acc_j6 = 72;
    if (has_m_acc_j6()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[72 / 32] & (0xffu << (72 % 32))) {
    // optional double m_eff_j0 = 73;
    if (has_m_eff_j0()) {
      total_size += 2 + 8;
    }

    // optional double m_eff_j1 = 74;
    if (has_m_eff_j1()) {
      total_size += 2 + 8;
    }

    // optional double m_eff_j2 = 75;
    if (has_m_eff_j2()) {
      total_size += 2 + 8;
    }

    // optional double m_eff_j3 = 76;
    if (has_m_eff_j3()) {
      total_size += 2 + 8;
    }

    // optional double m_eff_j4 = 77;
    if (has_m_eff_j4()) {
      total_size += 2 + 8;
    }

    // optional double m_eff_j5 = 78;
    if (has_m_eff_j5()) {
      total_size += 2 + 8;
    }

    // optional double m_eff_j6 = 79;
    if (has_m_eff_j6()) {
      total_size += 2 + 8;
    }

    // optional double control_eff_j0 = 80;
    if (has_control_eff_j0()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[80 / 32] & (0xffu << (80 % 32))) {
    // optional double control_eff_j1 = 81;
    if (has_control_eff_j1()) {
      total_size += 2 + 8;
    }

    // optional double control_eff_j2 = 82;
    if (has_control_eff_j2()) {
      total_size += 2 + 8;
    }

    // optional double control_eff_j3 = 83;
    if (has_control_eff_j3()) {
      total_size += 2 + 8;
    }

    // optional double control_eff_j4 = 84;
    if (has_control_eff_j4()) {
      total_size += 2 + 8;
    }

    // optional double control_eff_j5 = 85;
    if (has_control_eff_j5()) {
      total_size += 2 + 8;
    }

    // optional double control_eff_j6 = 86;
    if (has_control_eff_j6()) {
      total_size += 2 + 8;
    }

    // optional double r_cartPos_x = 87;
    if (has_r_cartpos_x()) {
      total_size += 2 + 8;
    }

    // optional double r_cartPos_y = 88;
    if (has_r_cartpos_y()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[88 / 32] & (0xffu << (88 % 32))) {
    // optional double r_cartPos_z = 89;
    if (has_r_cartpos_z()) {
      total_size += 2 + 8;
    }

    // optional double r_cartPos_Qx = 90;
    if (has_r_cartpos_qx()) {
      total_size += 2 + 8;
    }

    // optional double r_cartPos_Qy = 91;
    if (has_r_cartpos_qy()) {
      total_size += 2 + 8;
    }

    // optional double r_cartPos_Qz = 92;
    if (has_r_cartpos_qz()) {
      total_size += 2 + 8;
    }

    // optional double r_cartPos_QW = 93;
    if (has_r_cartpos_qw()) {
      total_size += 2 + 8;
    }

    // optional double r_pos_j0 = 94;
    if (has_r_pos_j0()) {
      total_size += 2 + 8;
    }

    // optional double r_pos_j1 = 95;
    if (has_r_pos_j1()) {
      total_size += 2 + 8;
    }

    // optional double r_pos_j2 = 96;
    if (has_r_pos_j2()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[96 / 32] & (0xffu << (96 % 32))) {
    // optional double r_pos_j3 = 97;
    if (has_r_pos_j3()) {
      total_size += 2 + 8;
    }

    // optional double r_pos_j4 = 98;
    if (has_r_pos_j4()) {
      total_size += 2 + 8;
    }

    // optional double r_pos_j5 = 99;
    if (has_r_pos_j5()) {
      total_size += 2 + 8;
    }

    // optional double r_pos_j6 = 100;
    if (has_r_pos_j6()) {
      total_size += 2 + 8;
    }

    // optional double r_vel_j0 = 101;
    if (has_r_vel_j0()) {
      total_size += 2 + 8;
    }

    // optional double r_vel_j1 = 102;
    if (has_r_vel_j1()) {
      total_size += 2 + 8;
    }

    // optional double r_vel_j2 = 103;
    if (has_r_vel_j2()) {
      total_size += 2 + 8;
    }

    // optional double r_vel_j3 = 104;
    if (has_r_vel_j3()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[104 / 32] & (0xffu << (104 % 32))) {
    // optional double r_vel_j4 = 105;
    if (has_r_vel_j4()) {
      total_size += 2 + 8;
    }

    // optional double r_vel_j5 = 106;
    if (has_r_vel_j5()) {
      total_size += 2 + 8;
    }

    // optional double r_vel_j6 = 107;
    if (has_r_vel_j6()) {
      total_size += 2 + 8;
    }

    // optional double r_acc_j0 = 108;
    if (has_r_acc_j0()) {
      total_size += 2 + 8;
    }

    // optional double r_acc_j1 = 109;
    if (has_r_acc_j1()) {
      total_size += 2 + 8;
    }

    // optional double r_acc_j2 = 110;
    if (has_r_acc_j2()) {
      total_size += 2 + 8;
    }

    // optional double r_acc_j3 = 111;
    if (has_r_acc_j3()) {
      total_size += 2 + 8;
    }

    // optional double r_acc_j4 = 112;
    if (has_r_acc_j4()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[112 / 32] & (0xffu << (112 % 32))) {
    // optional double r_acc_j5 = 113;
    if (has_r_acc_j5()) {
      total_size += 2 + 8;
    }

    // optional double r_acc_j6 = 114;
    if (has_r_acc_j6()) {
      total_size += 2 + 8;
    }

    // optional double r_eff_j0 = 115;
    if (has_r_eff_j0()) {
      total_size += 2 + 8;
    }

    // optional double r_eff_j1 = 116;
    if (has_r_eff_j1()) {
      total_size += 2 + 8;
    }

    // optional double r_eff_j2 = 117;
    if (has_r_eff_j2()) {
      total_size += 2 + 8;
    }

    // optional double r_eff_j3 = 118;
    if (has_r_eff_j3()) {
      total_size += 2 + 8;
    }

    // optional double r_eff_j4 = 119;
    if (has_r_eff_j4()) {
      total_size += 2 + 8;
    }

    // optional double r_eff_j5 = 120;
    if (has_r_eff_j5()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[120 / 32] & (0xffu << (120 % 32))) {
    // optional double r_eff_j6 = 121;
    if (has_r_eff_j6()) {
      total_size += 2 + 8;
    }

    // optional double l_limit_0 = 122;
    if (has_l_limit_0()) {
      total_size += 2 + 8;
    }

    // optional double l_limit_1 = 123;
    if (has_l_limit_1()) {
      total_size += 2 + 8;
    }

    // optional double l_limit_2 = 124;
    if (has_l_limit_2()) {
      total_size += 2 + 8;
    }

    // optional double l_limit_3 = 125;
    if (has_l_limit_3()) {
      total_size += 2 + 8;
    }

    // optional double l_limit_4 = 126;
    if (has_l_limit_4()) {
      total_size += 2 + 8;
    }

    // optional double l_limit_5 = 127;
    if (has_l_limit_5()) {
      total_size += 2 + 8;
    }

    // optional double l_limit_6 = 128;
    if (has_l_limit_6()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[128 / 32] & (0xffu << (128 % 32))) {
    // optional double u_limit_0 = 129;
    if (has_u_limit_0()) {
      total_size += 2 + 8;
    }

    // optional double u_limit_1 = 130;
    if (has_u_limit_1()) {
      total_size += 2 + 8;
    }

    // optional double u_limit_2 = 131;
    if (has_u_limit_2()) {
      total_size += 2 + 8;
    }

    // optional double u_limit_3 = 132;
    if (has_u_limit_3()) {
      total_size += 2 + 8;
    }

    // optional double u_limit_4 = 133;
    if (has_u_limit_4()) {
      total_size += 2 + 8;
    }

    // optional double u_limit_5 = 134;
    if (has_u_limit_5()) {
      total_size += 2 + 8;
    }

    // optional double u_limit_6 = 135;
    if (has_u_limit_6()) {
      total_size += 2 + 8;
    }

    // optional double kappa = 136;
    if (has_kappa()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[136 / 32] & (0xffu << (136 % 32))) {
    // optional double Kv = 137;
    if (has_kv()) {
      total_size += 2 + 8;
    }

    // optional double lambda = 138;
    if (has_lambda()) {
      total_size += 2 + 8;
    }

    // optional double Kz = 139;
    if (has_kz()) {
      total_size += 2 + 8;
    }

    // optional double Zb = 140;
    if (has_zb()) {
      total_size += 2 + 8;
    }

    // optional double F = 141;
    if (has_f()) {
      total_size += 2 + 8;
    }

    // optional double G = 142;
    if (has_g()) {
      total_size += 2 + 8;
    }

    // optional int64 inParams = 143;
    if (has_inparams()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->inparams());
    }

    // optional int64 outParams = 144;
    if (has_outparams()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->outparams());
    }

  }
  if (_has_bits_[144 / 32] & (0xffu << (144 % 32))) {
    // optional int64 hiddenNodes = 145;
    if (has_hiddennodes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->hiddennodes());
    }

    // optional int64 errorParams = 146;
    if (has_errorparams()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->errorparams());
    }

    // optional double feedForwardForce = 147;
    if (has_feedforwardforce()) {
      total_size += 2 + 8;
    }

    // optional double nn_ON = 148;
    if (has_nn_on()) {
      total_size += 2 + 8;
    }

    // optional double cartPos_Kp_x = 149;
    if (has_cartpos_kp_x()) {
      total_size += 2 + 8;
    }

    // optional double cartPos_Kp_y = 150;
    if (has_cartpos_kp_y()) {
      total_size += 2 + 8;
    }

    // optional double cartPos_Kp_z = 151;
    if (has_cartpos_kp_z()) {
      total_size += 2 + 8;
    }

    // optional double cartPos_Kd_x = 152;
    if (has_cartpos_kd_x()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[152 / 32] & (0xffu << (152 % 32))) {
    // optional double cartPos_Kd_y = 153;
    if (has_cartpos_kd_y()) {
      total_size += 2 + 8;
    }

    // optional double cartPos_Kd_z = 154;
    if (has_cartpos_kd_z()) {
      total_size += 2 + 8;
    }

    // optional double cartRot_Kp_x = 155;
    if (has_cartrot_kp_x()) {
      total_size += 2 + 8;
    }

    // optional double cartRot_Kp_y = 156;
    if (has_cartrot_kp_y()) {
      total_size += 2 + 8;
    }

    // optional double cartRot_Kp_z = 157;
    if (has_cartrot_kp_z()) {
      total_size += 2 + 8;
    }

    // optional double cartRot_Kd_x = 158;
    if (has_cartrot_kd_x()) {
      total_size += 2 + 8;
    }

    // optional double cartRot_Kd_y = 159;
    if (has_cartrot_kd_y()) {
      total_size += 2 + 8;
    }

    // optional double cartRot_Kd_z = 160;
    if (has_cartrot_kd_z()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[160 / 32] & (0xffu << (160 % 32))) {
    // optional bool useCurrentCartPose = 161;
    if (has_usecurrentcartpose()) {
      total_size += 2 + 1;
    }

    // optional bool useNullspacePose = 162;
    if (has_usenullspacepose()) {
      total_size += 2 + 1;
    }

    // optional double cartIniX = 163;
    if (has_cartinix()) {
      total_size += 2 + 8;
    }

    // optional double cartIniY = 164;
    if (has_cartiniy()) {
      total_size += 2 + 8;
    }

    // optional double cartIniZ = 165;
    if (has_cartiniz()) {
      total_size += 2 + 8;
    }

    // optional double cartIniRoll = 166;
    if (has_cartiniroll()) {
      total_size += 2 + 8;
    }

    // optional double cartIniPitch = 167;
    if (has_cartinipitch()) {
      total_size += 2 + 8;
    }

    // optional double cartIniYaw = 168;
    if (has_cartiniyaw()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[168 / 32] & (0xffu << (168 % 32))) {
    // optional double cartDesX = 169;
    if (has_cartdesx()) {
      total_size += 2 + 8;
    }

    // optional double cartDesY = 170;
    if (has_cartdesy()) {
      total_size += 2 + 8;
    }

    // optional double cartDesZ = 171;
    if (has_cartdesz()) {
      total_size += 2 + 8;
    }

    // optional double cartDesRoll = 172;
    if (has_cartdesroll()) {
      total_size += 2 + 8;
    }

    // optional double cartDesPitch = 173;
    if (has_cartdespitch()) {
      total_size += 2 + 8;
    }

    // optional double cartDesYaw = 174;
    if (has_cartdesyaw()) {
      total_size += 2 + 8;
    }

    // optional double m = 175;
    if (has_m()) {
      total_size += 2 + 8;
    }

    // optional double d = 176;
    if (has_d()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[176 / 32] & (0xffu << (176 % 32))) {
    // optional double k = 177;
    if (has_k()) {
      total_size += 2 + 8;
    }

    // optional double task_mA = 178;
    if (has_task_ma()) {
      total_size += 2 + 8;
    }

    // optional double task_mB = 179;
    if (has_task_mb()) {
      total_size += 2 + 8;
    }

    // optional double fixedFilterWeights = 180;
    if (has_fixedfilterweights()) {
      total_size += 2 + 8;
    }

    // optional double w0 = 182;
    if (has_w0()) {
      total_size += 2 + 8;
    }

    // optional double w1 = 183;
    if (has_w1()) {
      total_size += 2 + 8;
    }

    // optional double w2 = 184;
    if (has_w2()) {
      total_size += 2 + 8;
    }

    // optional double w3 = 185;
    if (has_w3()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[184 / 32] & (0xffu << (184 % 32))) {
    // optional double w4 = 186;
    if (has_w4()) {
      total_size += 2 + 8;
    }

    // optional double w5 = 187;
    if (has_w5()) {
      total_size += 2 + 8;
    }

    // optional double w6 = 188;
    if (has_w6()) {
      total_size += 2 + 8;
    }

    // optional double w7 = 189;
    if (has_w7()) {
      total_size += 2 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Datum::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Datum* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Datum*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Datum::MergeFrom(const Datum& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dt()) {
      set_dt(from.dt());
    }
    if (from.has_force_x()) {
      set_force_x(from.force_x());
    }
    if (from.has_force_y()) {
      set_force_y(from.force_y());
    }
    if (from.has_force_z()) {
      set_force_z(from.force_z());
    }
    if (from.has_torque_x()) {
      set_torque_x(from.torque_x());
    }
    if (from.has_torque_y()) {
      set_torque_y(from.torque_y());
    }
    if (from.has_torque_z()) {
      set_torque_z(from.torque_z());
    }
    if (from.has_acc_x()) {
      set_acc_x(from.acc_x());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_acc_y()) {
      set_acc_y(from.acc_y());
    }
    if (from.has_acc_z()) {
      set_acc_z(from.acc_z());
    }
    if (from.has_r_eff_x()) {
      set_r_eff_x(from.r_eff_x());
    }
    if (from.has_r_eff_y()) {
      set_r_eff_y(from.r_eff_y());
    }
    if (from.has_r_eff_z()) {
      set_r_eff_z(from.r_eff_z());
    }
    if (from.has_r_trq_x()) {
      set_r_trq_x(from.r_trq_x());
    }
    if (from.has_r_trq_y()) {
      set_r_trq_y(from.r_trq_y());
    }
    if (from.has_r_trq_z()) {
      set_r_trq_z(from.r_trq_z());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_reference_eff_j0()) {
      set_reference_eff_j0(from.reference_eff_j0());
    }
    if (from.has_reference_eff_j1()) {
      set_reference_eff_j1(from.reference_eff_j1());
    }
    if (from.has_reference_eff_j2()) {
      set_reference_eff_j2(from.reference_eff_j2());
    }
    if (from.has_reference_eff_j3()) {
      set_reference_eff_j3(from.reference_eff_j3());
    }
    if (from.has_reference_eff_j4()) {
      set_reference_eff_j4(from.reference_eff_j4());
    }
    if (from.has_reference_eff_j5()) {
      set_reference_eff_j5(from.reference_eff_j5());
    }
    if (from.has_reference_eff_j6()) {
      set_reference_eff_j6(from.reference_eff_j6());
    }
    if (from.has_taskref_x()) {
      set_taskref_x(from.taskref_x());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_taskref_y()) {
      set_taskref_y(from.taskref_y());
    }
    if (from.has_taskref_z()) {
      set_taskref_z(from.taskref_z());
    }
    if (from.has_taskref_phi()) {
      set_taskref_phi(from.taskref_phi());
    }
    if (from.has_taskref_theta()) {
      set_taskref_theta(from.taskref_theta());
    }
    if (from.has_taskref_psi()) {
      set_taskref_psi(from.taskref_psi());
    }
    if (from.has_taskrefmodel_x()) {
      set_taskrefmodel_x(from.taskrefmodel_x());
    }
    if (from.has_taskrefmodel_y()) {
      set_taskrefmodel_y(from.taskrefmodel_y());
    }
    if (from.has_taskrefmodel_z()) {
      set_taskrefmodel_z(from.taskrefmodel_z());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_taskrefmodel_phi()) {
      set_taskrefmodel_phi(from.taskrefmodel_phi());
    }
    if (from.has_taskrefmodel_theta()) {
      set_taskrefmodel_theta(from.taskrefmodel_theta());
    }
    if (from.has_taskrefmodel_psi()) {
      set_taskrefmodel_psi(from.taskrefmodel_psi());
    }
    if (from.has_m_cartpos_x()) {
      set_m_cartpos_x(from.m_cartpos_x());
    }
    if (from.has_m_cartpos_y()) {
      set_m_cartpos_y(from.m_cartpos_y());
    }
    if (from.has_m_cartpos_z()) {
      set_m_cartpos_z(from.m_cartpos_z());
    }
    if (from.has_m_cartpos_qx()) {
      set_m_cartpos_qx(from.m_cartpos_qx());
    }
    if (from.has_m_cartpos_qy()) {
      set_m_cartpos_qy(from.m_cartpos_qy());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_m_cartpos_qz()) {
      set_m_cartpos_qz(from.m_cartpos_qz());
    }
    if (from.has_m_cartpos_qw()) {
      set_m_cartpos_qw(from.m_cartpos_qw());
    }
    if (from.has_m_pos_x()) {
      set_m_pos_x(from.m_pos_x());
    }
    if (from.has_m_pos_y()) {
      set_m_pos_y(from.m_pos_y());
    }
    if (from.has_m_pos_z()) {
      set_m_pos_z(from.m_pos_z());
    }
    if (from.has_m_vel_x()) {
      set_m_vel_x(from.m_vel_x());
    }
    if (from.has_m_vel_y()) {
      set_m_vel_y(from.m_vel_y());
    }
    if (from.has_m_vel_z()) {
      set_m_vel_z(from.m_vel_z());
    }
  }
  if (from._has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    if (from.has_m_acc_x()) {
      set_m_acc_x(from.m_acc_x());
    }
    if (from.has_m_acc_y()) {
      set_m_acc_y(from.m_acc_y());
    }
    if (from.has_m_acc_z()) {
      set_m_acc_z(from.m_acc_z());
    }
    if (from.has_m_pos_j0()) {
      set_m_pos_j0(from.m_pos_j0());
    }
    if (from.has_m_pos_j1()) {
      set_m_pos_j1(from.m_pos_j1());
    }
    if (from.has_m_pos_j2()) {
      set_m_pos_j2(from.m_pos_j2());
    }
    if (from.has_m_pos_j3()) {
      set_m_pos_j3(from.m_pos_j3());
    }
    if (from.has_m_pos_j4()) {
      set_m_pos_j4(from.m_pos_j4());
    }
  }
  if (from._has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    if (from.has_m_pos_j5()) {
      set_m_pos_j5(from.m_pos_j5());
    }
    if (from.has_m_pos_j6()) {
      set_m_pos_j6(from.m_pos_j6());
    }
    if (from.has_m_vel_j0()) {
      set_m_vel_j0(from.m_vel_j0());
    }
    if (from.has_m_vel_j1()) {
      set_m_vel_j1(from.m_vel_j1());
    }
    if (from.has_m_vel_j2()) {
      set_m_vel_j2(from.m_vel_j2());
    }
    if (from.has_m_vel_j3()) {
      set_m_vel_j3(from.m_vel_j3());
    }
    if (from.has_m_vel_j4()) {
      set_m_vel_j4(from.m_vel_j4());
    }
    if (from.has_m_vel_j5()) {
      set_m_vel_j5(from.m_vel_j5());
    }
  }
  if (from._has_bits_[64 / 32] & (0xffu << (64 % 32))) {
    if (from.has_m_vel_j6()) {
      set_m_vel_j6(from.m_vel_j6());
    }
    if (from.has_m_acc_j0()) {
      set_m_acc_j0(from.m_acc_j0());
    }
    if (from.has_m_acc_j1()) {
      set_m_acc_j1(from.m_acc_j1());
    }
    if (from.has_m_acc_j2()) {
      set_m_acc_j2(from.m_acc_j2());
    }
    if (from.has_m_acc_j3()) {
      set_m_acc_j3(from.m_acc_j3());
    }
    if (from.has_m_acc_j4()) {
      set_m_acc_j4(from.m_acc_j4());
    }
    if (from.has_m_acc_j5()) {
      set_m_acc_j5(from.m_acc_j5());
    }
    if (from.has_m_acc_j6()) {
      set_m_acc_j6(from.m_acc_j6());
    }
  }
  if (from._has_bits_[72 / 32] & (0xffu << (72 % 32))) {
    if (from.has_m_eff_j0()) {
      set_m_eff_j0(from.m_eff_j0());
    }
    if (from.has_m_eff_j1()) {
      set_m_eff_j1(from.m_eff_j1());
    }
    if (from.has_m_eff_j2()) {
      set_m_eff_j2(from.m_eff_j2());
    }
    if (from.has_m_eff_j3()) {
      set_m_eff_j3(from.m_eff_j3());
    }
    if (from.has_m_eff_j4()) {
      set_m_eff_j4(from.m_eff_j4());
    }
    if (from.has_m_eff_j5()) {
      set_m_eff_j5(from.m_eff_j5());
    }
    if (from.has_m_eff_j6()) {
      set_m_eff_j6(from.m_eff_j6());
    }
    if (from.has_control_eff_j0()) {
      set_control_eff_j0(from.control_eff_j0());
    }
  }
  if (from._has_bits_[80 / 32] & (0xffu << (80 % 32))) {
    if (from.has_control_eff_j1()) {
      set_control_eff_j1(from.control_eff_j1());
    }
    if (from.has_control_eff_j2()) {
      set_control_eff_j2(from.control_eff_j2());
    }
    if (from.has_control_eff_j3()) {
      set_control_eff_j3(from.control_eff_j3());
    }
    if (from.has_control_eff_j4()) {
      set_control_eff_j4(from.control_eff_j4());
    }
    if (from.has_control_eff_j5()) {
      set_control_eff_j5(from.control_eff_j5());
    }
    if (from.has_control_eff_j6()) {
      set_control_eff_j6(from.control_eff_j6());
    }
    if (from.has_r_cartpos_x()) {
      set_r_cartpos_x(from.r_cartpos_x());
    }
    if (from.has_r_cartpos_y()) {
      set_r_cartpos_y(from.r_cartpos_y());
    }
  }
  if (from._has_bits_[88 / 32] & (0xffu << (88 % 32))) {
    if (from.has_r_cartpos_z()) {
      set_r_cartpos_z(from.r_cartpos_z());
    }
    if (from.has_r_cartpos_qx()) {
      set_r_cartpos_qx(from.r_cartpos_qx());
    }
    if (from.has_r_cartpos_qy()) {
      set_r_cartpos_qy(from.r_cartpos_qy());
    }
    if (from.has_r_cartpos_qz()) {
      set_r_cartpos_qz(from.r_cartpos_qz());
    }
    if (from.has_r_cartpos_qw()) {
      set_r_cartpos_qw(from.r_cartpos_qw());
    }
    if (from.has_r_pos_j0()) {
      set_r_pos_j0(from.r_pos_j0());
    }
    if (from.has_r_pos_j1()) {
      set_r_pos_j1(from.r_pos_j1());
    }
    if (from.has_r_pos_j2()) {
      set_r_pos_j2(from.r_pos_j2());
    }
  }
  if (from._has_bits_[96 / 32] & (0xffu << (96 % 32))) {
    if (from.has_r_pos_j3()) {
      set_r_pos_j3(from.r_pos_j3());
    }
    if (from.has_r_pos_j4()) {
      set_r_pos_j4(from.r_pos_j4());
    }
    if (from.has_r_pos_j5()) {
      set_r_pos_j5(from.r_pos_j5());
    }
    if (from.has_r_pos_j6()) {
      set_r_pos_j6(from.r_pos_j6());
    }
    if (from.has_r_vel_j0()) {
      set_r_vel_j0(from.r_vel_j0());
    }
    if (from.has_r_vel_j1()) {
      set_r_vel_j1(from.r_vel_j1());
    }
    if (from.has_r_vel_j2()) {
      set_r_vel_j2(from.r_vel_j2());
    }
    if (from.has_r_vel_j3()) {
      set_r_vel_j3(from.r_vel_j3());
    }
  }
  if (from._has_bits_[104 / 32] & (0xffu << (104 % 32))) {
    if (from.has_r_vel_j4()) {
      set_r_vel_j4(from.r_vel_j4());
    }
    if (from.has_r_vel_j5()) {
      set_r_vel_j5(from.r_vel_j5());
    }
    if (from.has_r_vel_j6()) {
      set_r_vel_j6(from.r_vel_j6());
    }
    if (from.has_r_acc_j0()) {
      set_r_acc_j0(from.r_acc_j0());
    }
    if (from.has_r_acc_j1()) {
      set_r_acc_j1(from.r_acc_j1());
    }
    if (from.has_r_acc_j2()) {
      set_r_acc_j2(from.r_acc_j2());
    }
    if (from.has_r_acc_j3()) {
      set_r_acc_j3(from.r_acc_j3());
    }
    if (from.has_r_acc_j4()) {
      set_r_acc_j4(from.r_acc_j4());
    }
  }
  if (from._has_bits_[112 / 32] & (0xffu << (112 % 32))) {
    if (from.has_r_acc_j5()) {
      set_r_acc_j5(from.r_acc_j5());
    }
    if (from.has_r_acc_j6()) {
      set_r_acc_j6(from.r_acc_j6());
    }
    if (from.has_r_eff_j0()) {
      set_r_eff_j0(from.r_eff_j0());
    }
    if (from.has_r_eff_j1()) {
      set_r_eff_j1(from.r_eff_j1());
    }
    if (from.has_r_eff_j2()) {
      set_r_eff_j2(from.r_eff_j2());
    }
    if (from.has_r_eff_j3()) {
      set_r_eff_j3(from.r_eff_j3());
    }
    if (from.has_r_eff_j4()) {
      set_r_eff_j4(from.r_eff_j4());
    }
    if (from.has_r_eff_j5()) {
      set_r_eff_j5(from.r_eff_j5());
    }
  }
  if (from._has_bits_[120 / 32] & (0xffu << (120 % 32))) {
    if (from.has_r_eff_j6()) {
      set_r_eff_j6(from.r_eff_j6());
    }
    if (from.has_l_limit_0()) {
      set_l_limit_0(from.l_limit_0());
    }
    if (from.has_l_limit_1()) {
      set_l_limit_1(from.l_limit_1());
    }
    if (from.has_l_limit_2()) {
      set_l_limit_2(from.l_limit_2());
    }
    if (from.has_l_limit_3()) {
      set_l_limit_3(from.l_limit_3());
    }
    if (from.has_l_limit_4()) {
      set_l_limit_4(from.l_limit_4());
    }
    if (from.has_l_limit_5()) {
      set_l_limit_5(from.l_limit_5());
    }
    if (from.has_l_limit_6()) {
      set_l_limit_6(from.l_limit_6());
    }
  }
  if (from._has_bits_[128 / 32] & (0xffu << (128 % 32))) {
    if (from.has_u_limit_0()) {
      set_u_limit_0(from.u_limit_0());
    }
    if (from.has_u_limit_1()) {
      set_u_limit_1(from.u_limit_1());
    }
    if (from.has_u_limit_2()) {
      set_u_limit_2(from.u_limit_2());
    }
    if (from.has_u_limit_3()) {
      set_u_limit_3(from.u_limit_3());
    }
    if (from.has_u_limit_4()) {
      set_u_limit_4(from.u_limit_4());
    }
    if (from.has_u_limit_5()) {
      set_u_limit_5(from.u_limit_5());
    }
    if (from.has_u_limit_6()) {
      set_u_limit_6(from.u_limit_6());
    }
    if (from.has_kappa()) {
      set_kappa(from.kappa());
    }
  }
  if (from._has_bits_[136 / 32] & (0xffu << (136 % 32))) {
    if (from.has_kv()) {
      set_kv(from.kv());
    }
    if (from.has_lambda()) {
      set_lambda(from.lambda());
    }
    if (from.has_kz()) {
      set_kz(from.kz());
    }
    if (from.has_zb()) {
      set_zb(from.zb());
    }
    if (from.has_f()) {
      set_f(from.f());
    }
    if (from.has_g()) {
      set_g(from.g());
    }
    if (from.has_inparams()) {
      set_inparams(from.inparams());
    }
    if (from.has_outparams()) {
      set_outparams(from.outparams());
    }
  }
  if (from._has_bits_[144 / 32] & (0xffu << (144 % 32))) {
    if (from.has_hiddennodes()) {
      set_hiddennodes(from.hiddennodes());
    }
    if (from.has_errorparams()) {
      set_errorparams(from.errorparams());
    }
    if (from.has_feedforwardforce()) {
      set_feedforwardforce(from.feedforwardforce());
    }
    if (from.has_nn_on()) {
      set_nn_on(from.nn_on());
    }
    if (from.has_cartpos_kp_x()) {
      set_cartpos_kp_x(from.cartpos_kp_x());
    }
    if (from.has_cartpos_kp_y()) {
      set_cartpos_kp_y(from.cartpos_kp_y());
    }
    if (from.has_cartpos_kp_z()) {
      set_cartpos_kp_z(from.cartpos_kp_z());
    }
    if (from.has_cartpos_kd_x()) {
      set_cartpos_kd_x(from.cartpos_kd_x());
    }
  }
  if (from._has_bits_[152 / 32] & (0xffu << (152 % 32))) {
    if (from.has_cartpos_kd_y()) {
      set_cartpos_kd_y(from.cartpos_kd_y());
    }
    if (from.has_cartpos_kd_z()) {
      set_cartpos_kd_z(from.cartpos_kd_z());
    }
    if (from.has_cartrot_kp_x()) {
      set_cartrot_kp_x(from.cartrot_kp_x());
    }
    if (from.has_cartrot_kp_y()) {
      set_cartrot_kp_y(from.cartrot_kp_y());
    }
    if (from.has_cartrot_kp_z()) {
      set_cartrot_kp_z(from.cartrot_kp_z());
    }
    if (from.has_cartrot_kd_x()) {
      set_cartrot_kd_x(from.cartrot_kd_x());
    }
    if (from.has_cartrot_kd_y()) {
      set_cartrot_kd_y(from.cartrot_kd_y());
    }
    if (from.has_cartrot_kd_z()) {
      set_cartrot_kd_z(from.cartrot_kd_z());
    }
  }
  if (from._has_bits_[160 / 32] & (0xffu << (160 % 32))) {
    if (from.has_usecurrentcartpose()) {
      set_usecurrentcartpose(from.usecurrentcartpose());
    }
    if (from.has_usenullspacepose()) {
      set_usenullspacepose(from.usenullspacepose());
    }
    if (from.has_cartinix()) {
      set_cartinix(from.cartinix());
    }
    if (from.has_cartiniy()) {
      set_cartiniy(from.cartiniy());
    }
    if (from.has_cartiniz()) {
      set_cartiniz(from.cartiniz());
    }
    if (from.has_cartiniroll()) {
      set_cartiniroll(from.cartiniroll());
    }
    if (from.has_cartinipitch()) {
      set_cartinipitch(from.cartinipitch());
    }
    if (from.has_cartiniyaw()) {
      set_cartiniyaw(from.cartiniyaw());
    }
  }
  if (from._has_bits_[168 / 32] & (0xffu << (168 % 32))) {
    if (from.has_cartdesx()) {
      set_cartdesx(from.cartdesx());
    }
    if (from.has_cartdesy()) {
      set_cartdesy(from.cartdesy());
    }
    if (from.has_cartdesz()) {
      set_cartdesz(from.cartdesz());
    }
    if (from.has_cartdesroll()) {
      set_cartdesroll(from.cartdesroll());
    }
    if (from.has_cartdespitch()) {
      set_cartdespitch(from.cartdespitch());
    }
    if (from.has_cartdesyaw()) {
      set_cartdesyaw(from.cartdesyaw());
    }
    if (from.has_m()) {
      set_m(from.m());
    }
    if (from.has_d()) {
      set_d(from.d());
    }
  }
  if (from._has_bits_[176 / 32] & (0xffu << (176 % 32))) {
    if (from.has_k()) {
      set_k(from.k());
    }
    if (from.has_task_ma()) {
      set_task_ma(from.task_ma());
    }
    if (from.has_task_mb()) {
      set_task_mb(from.task_mb());
    }
    if (from.has_fixedfilterweights()) {
      set_fixedfilterweights(from.fixedfilterweights());
    }
    if (from.has_w0()) {
      set_w0(from.w0());
    }
    if (from.has_w1()) {
      set_w1(from.w1());
    }
    if (from.has_w2()) {
      set_w2(from.w2());
    }
    if (from.has_w3()) {
      set_w3(from.w3());
    }
  }
  if (from._has_bits_[184 / 32] & (0xffu << (184 % 32))) {
    if (from.has_w4()) {
      set_w4(from.w4());
    }
    if (from.has_w5()) {
      set_w5(from.w5());
    }
    if (from.has_w6()) {
      set_w6(from.w6());
    }
    if (from.has_w7()) {
      set_w7(from.w7());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Datum::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Datum::CopyFrom(const Datum& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Datum::IsInitialized() const {

  return true;
}

void Datum::Swap(Datum* other) {
  if (other != this) {
    std::swap(dt_, other->dt_);
    std::swap(force_x_, other->force_x_);
    std::swap(force_y_, other->force_y_);
    std::swap(force_z_, other->force_z_);
    std::swap(torque_x_, other->torque_x_);
    std::swap(torque_y_, other->torque_y_);
    std::swap(torque_z_, other->torque_z_);
    std::swap(acc_x_, other->acc_x_);
    std::swap(acc_y_, other->acc_y_);
    std::swap(acc_z_, other->acc_z_);
    std::swap(r_eff_x_, other->r_eff_x_);
    std::swap(r_eff_y_, other->r_eff_y_);
    std::swap(r_eff_z_, other->r_eff_z_);
    std::swap(r_trq_x_, other->r_trq_x_);
    std::swap(r_trq_y_, other->r_trq_y_);
    std::swap(r_trq_z_, other->r_trq_z_);
    std::swap(reference_eff_j0_, other->reference_eff_j0_);
    std::swap(reference_eff_j1_, other->reference_eff_j1_);
    std::swap(reference_eff_j2_, other->reference_eff_j2_);
    std::swap(reference_eff_j3_, other->reference_eff_j3_);
    std::swap(reference_eff_j4_, other->reference_eff_j4_);
    std::swap(reference_eff_j5_, other->reference_eff_j5_);
    std::swap(reference_eff_j6_, other->reference_eff_j6_);
    std::swap(taskref_x_, other->taskref_x_);
    std::swap(taskref_y_, other->taskref_y_);
    std::swap(taskref_z_, other->taskref_z_);
    std::swap(taskref_phi_, other->taskref_phi_);
    std::swap(taskref_theta_, other->taskref_theta_);
    std::swap(taskref_psi_, other->taskref_psi_);
    std::swap(taskrefmodel_x_, other->taskrefmodel_x_);
    std::swap(taskrefmodel_y_, other->taskrefmodel_y_);
    std::swap(taskrefmodel_z_, other->taskrefmodel_z_);
    std::swap(taskrefmodel_phi_, other->taskrefmodel_phi_);
    std::swap(taskrefmodel_theta_, other->taskrefmodel_theta_);
    std::swap(taskrefmodel_psi_, other->taskrefmodel_psi_);
    std::swap(m_cartpos_x_, other->m_cartpos_x_);
    std::swap(m_cartpos_y_, other->m_cartpos_y_);
    std::swap(m_cartpos_z_, other->m_cartpos_z_);
    std::swap(m_cartpos_qx_, other->m_cartpos_qx_);
    std::swap(m_cartpos_qy_, other->m_cartpos_qy_);
    std::swap(m_cartpos_qz_, other->m_cartpos_qz_);
    std::swap(m_cartpos_qw_, other->m_cartpos_qw_);
    std::swap(m_pos_x_, other->m_pos_x_);
    std::swap(m_pos_y_, other->m_pos_y_);
    std::swap(m_pos_z_, other->m_pos_z_);
    std::swap(m_vel_x_, other->m_vel_x_);
    std::swap(m_vel_y_, other->m_vel_y_);
    std::swap(m_vel_z_, other->m_vel_z_);
    std::swap(m_acc_x_, other->m_acc_x_);
    std::swap(m_acc_y_, other->m_acc_y_);
    std::swap(m_acc_z_, other->m_acc_z_);
    std::swap(m_pos_j0_, other->m_pos_j0_);
    std::swap(m_pos_j1_, other->m_pos_j1_);
    std::swap(m_pos_j2_, other->m_pos_j2_);
    std::swap(m_pos_j3_, other->m_pos_j3_);
    std::swap(m_pos_j4_, other->m_pos_j4_);
    std::swap(m_pos_j5_, other->m_pos_j5_);
    std::swap(m_pos_j6_, other->m_pos_j6_);
    std::swap(m_vel_j0_, other->m_vel_j0_);
    std::swap(m_vel_j1_, other->m_vel_j1_);
    std::swap(m_vel_j2_, other->m_vel_j2_);
    std::swap(m_vel_j3_, other->m_vel_j3_);
    std::swap(m_vel_j4_, other->m_vel_j4_);
    std::swap(m_vel_j5_, other->m_vel_j5_);
    std::swap(m_vel_j6_, other->m_vel_j6_);
    std::swap(m_acc_j0_, other->m_acc_j0_);
    std::swap(m_acc_j1_, other->m_acc_j1_);
    std::swap(m_acc_j2_, other->m_acc_j2_);
    std::swap(m_acc_j3_, other->m_acc_j3_);
    std::swap(m_acc_j4_, other->m_acc_j4_);
    std::swap(m_acc_j5_, other->m_acc_j5_);
    std::swap(m_acc_j6_, other->m_acc_j6_);
    std::swap(m_eff_j0_, other->m_eff_j0_);
    std::swap(m_eff_j1_, other->m_eff_j1_);
    std::swap(m_eff_j2_, other->m_eff_j2_);
    std::swap(m_eff_j3_, other->m_eff_j3_);
    std::swap(m_eff_j4_, other->m_eff_j4_);
    std::swap(m_eff_j5_, other->m_eff_j5_);
    std::swap(m_eff_j6_, other->m_eff_j6_);
    std::swap(control_eff_j0_, other->control_eff_j0_);
    std::swap(control_eff_j1_, other->control_eff_j1_);
    std::swap(control_eff_j2_, other->control_eff_j2_);
    std::swap(control_eff_j3_, other->control_eff_j3_);
    std::swap(control_eff_j4_, other->control_eff_j4_);
    std::swap(control_eff_j5_, other->control_eff_j5_);
    std::swap(control_eff_j6_, other->control_eff_j6_);
    std::swap(r_cartpos_x_, other->r_cartpos_x_);
    std::swap(r_cartpos_y_, other->r_cartpos_y_);
    std::swap(r_cartpos_z_, other->r_cartpos_z_);
    std::swap(r_cartpos_qx_, other->r_cartpos_qx_);
    std::swap(r_cartpos_qy_, other->r_cartpos_qy_);
    std::swap(r_cartpos_qz_, other->r_cartpos_qz_);
    std::swap(r_cartpos_qw_, other->r_cartpos_qw_);
    std::swap(r_pos_j0_, other->r_pos_j0_);
    std::swap(r_pos_j1_, other->r_pos_j1_);
    std::swap(r_pos_j2_, other->r_pos_j2_);
    std::swap(r_pos_j3_, other->r_pos_j3_);
    std::swap(r_pos_j4_, other->r_pos_j4_);
    std::swap(r_pos_j5_, other->r_pos_j5_);
    std::swap(r_pos_j6_, other->r_pos_j6_);
    std::swap(r_vel_j0_, other->r_vel_j0_);
    std::swap(r_vel_j1_, other->r_vel_j1_);
    std::swap(r_vel_j2_, other->r_vel_j2_);
    std::swap(r_vel_j3_, other->r_vel_j3_);
    std::swap(r_vel_j4_, other->r_vel_j4_);
    std::swap(r_vel_j5_, other->r_vel_j5_);
    std::swap(r_vel_j6_, other->r_vel_j6_);
    std::swap(r_acc_j0_, other->r_acc_j0_);
    std::swap(r_acc_j1_, other->r_acc_j1_);
    std::swap(r_acc_j2_, other->r_acc_j2_);
    std::swap(r_acc_j3_, other->r_acc_j3_);
    std::swap(r_acc_j4_, other->r_acc_j4_);
    std::swap(r_acc_j5_, other->r_acc_j5_);
    std::swap(r_acc_j6_, other->r_acc_j6_);
    std::swap(r_eff_j0_, other->r_eff_j0_);
    std::swap(r_eff_j1_, other->r_eff_j1_);
    std::swap(r_eff_j2_, other->r_eff_j2_);
    std::swap(r_eff_j3_, other->r_eff_j3_);
    std::swap(r_eff_j4_, other->r_eff_j4_);
    std::swap(r_eff_j5_, other->r_eff_j5_);
    std::swap(r_eff_j6_, other->r_eff_j6_);
    std::swap(l_limit_0_, other->l_limit_0_);
    std::swap(l_limit_1_, other->l_limit_1_);
    std::swap(l_limit_2_, other->l_limit_2_);
    std::swap(l_limit_3_, other->l_limit_3_);
    std::swap(l_limit_4_, other->l_limit_4_);
    std::swap(l_limit_5_, other->l_limit_5_);
    std::swap(l_limit_6_, other->l_limit_6_);
    std::swap(u_limit_0_, other->u_limit_0_);
    std::swap(u_limit_1_, other->u_limit_1_);
    std::swap(u_limit_2_, other->u_limit_2_);
    std::swap(u_limit_3_, other->u_limit_3_);
    std::swap(u_limit_4_, other->u_limit_4_);
    std::swap(u_limit_5_, other->u_limit_5_);
    std::swap(u_limit_6_, other->u_limit_6_);
    std::swap(kappa_, other->kappa_);
    std::swap(kv_, other->kv_);
    std::swap(lambda_, other->lambda_);
    std::swap(kz_, other->kz_);
    std::swap(zb_, other->zb_);
    std::swap(f_, other->f_);
    std::swap(g_, other->g_);
    std::swap(inparams_, other->inparams_);
    std::swap(outparams_, other->outparams_);
    std::swap(hiddennodes_, other->hiddennodes_);
    std::swap(errorparams_, other->errorparams_);
    std::swap(feedforwardforce_, other->feedforwardforce_);
    std::swap(nn_on_, other->nn_on_);
    std::swap(cartpos_kp_x_, other->cartpos_kp_x_);
    std::swap(cartpos_kp_y_, other->cartpos_kp_y_);
    std::swap(cartpos_kp_z_, other->cartpos_kp_z_);
    std::swap(cartpos_kd_x_, other->cartpos_kd_x_);
    std::swap(cartpos_kd_y_, other->cartpos_kd_y_);
    std::swap(cartpos_kd_z_, other->cartpos_kd_z_);
    std::swap(cartrot_kp_x_, other->cartrot_kp_x_);
    std::swap(cartrot_kp_y_, other->cartrot_kp_y_);
    std::swap(cartrot_kp_z_, other->cartrot_kp_z_);
    std::swap(cartrot_kd_x_, other->cartrot_kd_x_);
    std::swap(cartrot_kd_y_, other->cartrot_kd_y_);
    std::swap(cartrot_kd_z_, other->cartrot_kd_z_);
    std::swap(usecurrentcartpose_, other->usecurrentcartpose_);
    std::swap(usenullspacepose_, other->usenullspacepose_);
    std::swap(cartinix_, other->cartinix_);
    std::swap(cartiniy_, other->cartiniy_);
    std::swap(cartiniz_, other->cartiniz_);
    std::swap(cartiniroll_, other->cartiniroll_);
    std::swap(cartinipitch_, other->cartinipitch_);
    std::swap(cartiniyaw_, other->cartiniyaw_);
    std::swap(cartdesx_, other->cartdesx_);
    std::swap(cartdesy_, other->cartdesy_);
    std::swap(cartdesz_, other->cartdesz_);
    std::swap(cartdesroll_, other->cartdesroll_);
    std::swap(cartdespitch_, other->cartdespitch_);
    std::swap(cartdesyaw_, other->cartdesyaw_);
    std::swap(m_, other->m_);
    std::swap(d_, other->d_);
    std::swap(k_, other->k_);
    std::swap(task_ma_, other->task_ma_);
    std::swap(task_mb_, other->task_mb_);
    std::swap(fixedfilterweights_, other->fixedfilterweights_);
    std::swap(w0_, other->w0_);
    std::swap(w1_, other->w1_);
    std::swap(w2_, other->w2_);
    std::swap(w3_, other->w3_);
    std::swap(w4_, other->w4_);
    std::swap(w5_, other->w5_);
    std::swap(w6_, other->w6_);
    std::swap(w7_, other->w7_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    std::swap(_has_bits_[2], other->_has_bits_[2]);
    std::swap(_has_bits_[3], other->_has_bits_[3]);
    std::swap(_has_bits_[4], other->_has_bits_[4]);
    std::swap(_has_bits_[5], other->_has_bits_[5]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Datum::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Datum_descriptor_;
  metadata.reflection = Datum_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int controllerFullData::kDatumFieldNumber;
#endif  // !_MSC_VER

controllerFullData::controllerFullData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void controllerFullData::InitAsDefaultInstance() {
}

controllerFullData::controllerFullData(const controllerFullData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void controllerFullData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

controllerFullData::~controllerFullData() {
  SharedDtor();
}

void controllerFullData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void controllerFullData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* controllerFullData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return controllerFullData_descriptor_;
}

const controllerFullData& controllerFullData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_controllerFullData_2eproto();
  return *default_instance_;
}

controllerFullData* controllerFullData::default_instance_ = NULL;

controllerFullData* controllerFullData::New() const {
  return new controllerFullData;
}

void controllerFullData::Clear() {
  datum_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool controllerFullData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dataPoint.Datum datum = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_datum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datum()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_datum;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void controllerFullData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .dataPoint.Datum datum = 1;
  for (int i = 0; i < this->datum_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->datum(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* controllerFullData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .dataPoint.Datum datum = 1;
  for (int i = 0; i < this->datum_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->datum(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int controllerFullData::ByteSize() const {
  int total_size = 0;

  // repeated .dataPoint.Datum datum = 1;
  total_size += 1 * this->datum_size();
  for (int i = 0; i < this->datum_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datum(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void controllerFullData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const controllerFullData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const controllerFullData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void controllerFullData::MergeFrom(const controllerFullData& from) {
  GOOGLE_CHECK_NE(&from, this);
  datum_.MergeFrom(from.datum_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void controllerFullData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void controllerFullData::CopyFrom(const controllerFullData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool controllerFullData::IsInitialized() const {

  return true;
}

void controllerFullData::Swap(controllerFullData* other) {
  if (other != this) {
    datum_.Swap(&other->datum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata controllerFullData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = controllerFullData_descriptor_;
  metadata.reflection = controllerFullData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace dataPoint

// @@protoc_insertion_point(global_scope)
